{"version":3,"sources":["../static/js/main.0edfb7a7.js","../webpack/bootstrap 71491037c25f08f35011","../node_modules/webpack/buildin/global.js","../node_modules/bit-twiddle/twiddle.js","../node_modules/promise/lib/core.js","utils.js","../node_modules/typedarray-pool/pool.js","../node_modules/ndarray/ndarray.js","../node_modules/ndarray-ops/ndarray-ops.js","Tuner.js","../node_modules/react-scripts/config/polyfills.js","../node_modules/promise/lib/rejection-tracking.js","../node_modules/asap/browser-raw.js","../node_modules/promise/lib/es6-extensions.js","../node_modules/whatwg-fetch/fetch.js","../node_modules/object-assign/index.js","index.js","../node_modules/detect-pitch/pitch.js","../node_modules/buffer/index.js","../node_modules/base64-js/index.js","../node_modules/ieee754/index.js","../node_modules/buffer/node_modules/isarray/index.js","../node_modules/dup/dup.js","../node_modules/iota-array/iota.js","../node_modules/is-buffer/index.js","../node_modules/cwise-compiler/compiler.js","../node_modules/cwise-compiler/lib/thunk.js","../node_modules/cwise-compiler/lib/compile.js","../node_modules/uniq/uniq.js","../node_modules/ndarray-fft/fft.js","../node_modules/ndarray-fft/lib/fft-matrix.js","../node_modules/scijs-window-functions/hann.js","Meter.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","i","l","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","g","this","Function","eval","e","window","countTrailingZeros","v","INT_BITS","INT_MAX","INT_MIN","sign","abs","mask","min","x","y","max","isPow2","log2","r","shift","log10","popCount","nextPow2","prevPow2","parity","REVERSE_TABLE","Array","tab","reverse","interleave2","deinterleave2","interleave3","z","deinterleave3","nextCombination","t","noop","getThen","obj","then","ex","LAST_ERROR","IS_ERROR","tryCallOne","fn","a","tryCallTwo","b","Promise","TypeError","_75","_83","_18","_38","doResolve","safeThen","self","onFulfilled","onRejected","constructor","resolve","reject","res","handle","Handler","deferred","_47","push","handleResolved","asap","cb","promise","ret","newValue","finale","bind","_71","length","done","value","reason","_44","__webpack_exports__","degreesToRadians","isEven","signalToNote","__WEBPACK_IMPORTED_MODULE_0_detect_pitch__","__WEBPACK_IMPORTED_MODULE_0_detect_pitch___default","noteStrings","cents","f1","f2","Math","round","log","frequencyFromNoteNumber","note","pow","noteFromPitch","frequency","key","noteNum","octave","trunc","pitch","PI","signal","period","global","Buffer","freeArrayBuffer","buffer","byteLength","log_n","bits","DATA","freeTypedArray","array","mallocArrayBuffer","pop","ArrayBuffer","mallocUint8","Uint8Array","mallocUint16","Uint16Array","mallocUint32","Uint32Array","mallocInt8","Int8Array","mallocInt16","Int16Array","mallocInt32","Int32Array","mallocFloat","Float32Array","mallocDouble","Float64Array","mallocUint8Clamped","hasUint8C","Uint8ClampedArray","mallocDataView","DataView","mallocBuffer","cache","BUFFER","dup","__TYPEDARRAY_POOL","UINT8","UINT16","UINT32","INT8","INT16","INT32","FLOAT","DOUBLE","UINT8C","POOL","free","isBuffer","toString","freeUint8","freeUint16","freeUint32","freeInt8","freeInt16","freeInt32","freeFloat32","freeFloat","freeFloat64","freeDouble","freeUint8Clamped","freeDataView","freeBuffer","malloc","dtype","undefined","mallocFloat32","mallocFloat64","clearCache","compare1st","order","stride","terms","sort","result","compileConstructor","dimension","className","join","useGetters","code","procedure","CACHED_CONSTRUCTORS","indices","iota","args","map","index_str","shapeArg","strideArg","a_vars","c_vars","tShape","tStride","idx","arrayDType","data","hasTypedArrays","isArray","wrappedNDArrayCtor","shape","offset","ctor","sz","ctor_list","float32","float64","int8","int16","int32","uint8","uint16","uint32","uint8_clamped","generic","fixup","EmptyProc","lvalue","rvalue","count","thisVars","localVars","pcompile","user_args","compile","pre","body","post","proc","funcName","makeOp","assign_ops","add","sub","mul","div","mod","band","bor","bxor","lshift","rshift","rrshift","id","op","unary_ops","not","bnot","neg","recip","binary_ops","and","or","eq","neq","lt","gt","leq","geq","math_unary","f","math_comm","math_noncomm","any","all","sum","prod","norm2squared","norm2","norminf","norm1","sup","inf","argmin","argmax","random","assign","assigns","equals","_classCallCheck","instance","Constructor","Tuner","__WEBPACK_IMPORTED_MODULE_0__Meter_js__","_createClass","defineProperties","target","props","descriptor","writable","protoProps","staticProps","$note","document","getElementById","$frequency","$octave","$meter","$cents","meter","innerHTML","reDraw","enable","disable","enabled","options","onUnhandled","allRejections","matchWhitelist","rejections","error","whitelist","DEFAULT_WHITELIST","displayId","logged","logError","onHandled","console","warn","_56","clearTimeout","timeout","err","setTimeout","stack","split","forEach","line","list","some","cls","ReferenceError","RangeError","rawAsap","task","queue","requestFlush","flushing","flush","index","currentIndex","capacity","scan","newLength","makeRequestCallFromTimer","callback","handleTimer","timeoutHandle","clearInterval","intervalHandle","setInterval","scope","BrowserMutationObserver","MutationObserver","WebKitMutationObserver","toggle","observer","node","createTextNode","observe","characterData","valuePromise","TRUE","FALSE","NULL","UNDEFINED","ZERO","EMPTYSTRING","arr","slice","val","remaining","race","values","normalizeName","String","test","toLowerCase","normalizeValue","iteratorFor","items","iterator","next","support","iterable","Symbol","Headers","headers","append","header","getOwnPropertyNames","consumed","bodyUsed","fileReaderReady","reader","onload","onerror","readBlobAsArrayBuffer","blob","FileReader","readAsArrayBuffer","readBlobAsText","readAsText","readArrayBufferAsText","buf","view","chars","fromCharCode","bufferClone","set","Body","_initBody","_bodyInit","_bodyText","Blob","isPrototypeOf","_bodyBlob","formData","FormData","_bodyFormData","searchParams","URLSearchParams","arrayBuffer","isDataView","_bodyArrayBuffer","isArrayBufferView","Error","type","rejected","text","decode","json","JSON","parse","normalizeMethod","method","upcased","toUpperCase","methods","indexOf","Request","input","url","credentials","mode","referrer","form","trim","bytes","replace","decodeURIComponent","parseHeaders","rawHeaders","parts","Response","bodyInit","status","ok","statusText","fetch","viewClasses","isView","oldValue","has","thisArg","keys","entries","clone","response","redirectStatuses","redirect","location","init","request","xhr","XMLHttpRequest","getAllResponseHeaders","responseURL","responseText","ontimeout","open","withCredentials","responseType","setRequestHeader","send","polyfill","toObject","getOwnPropertySymbols","propIsEnumerable","propertyIsEnumerable","test1","test2","test3","letter","source","from","symbols","to","arguments","__WEBPACK_IMPORTED_MODULE_0__index_css__","__WEBPACK_IMPORTED_MODULE_1__utils__","__WEBPACK_IMPORTED_MODULE_2__Tuner__","NUM_SAMPLES","MusicalNote","tuner","context","AudioContext","webkitAudioContext","analyser","createAnalyser","fftSize","setupAudio","processAudio","_this","audio","Audio","src","loop","addEventListener","stream","createMediaElementSource","connect","destination","play","requestAnimationFrame","getFloatTimeDomainData","dispatchNote","square","prefilter","xf","aperiodic","findPeriod","lo","hi","threshold","smallest","y0","y1","y2","denom","ymin","f0","detectPitch","xs","re_arr","pool","im_arr","X","ndarray","Y","ops","magnitude","hann","fft","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","__proto__","arg","encodingOrOffset","allocUnsafe","fromArrayBuffer","fromString","fromObject","assertSize","size","alloc","fill","encoding","checked","string","isEncoding","actual","write","fromArrayLike","byteOffset","len","copy","isnan","SlowBuffer","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","end","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","dir","isNaN","arrayIndexOf","lastIndexOf","read","indexSize","readUInt16BE","arrLength","valLength","foundIndex","found","j","hexWrite","Number","strLen","parsed","parseInt","substr","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","apply","out","toHex","checkOffset","ext","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","str","stringtrim","INVALID_BASE64_RE","units","Infinity","leadSurrogate","charCodeAt","byteArray","toByteArray","dst","INSPECT_MAX_BYTES","foo","subarray","poolSize","_augment","species","allocUnsafeSlow","_isBuffer","compare","concat","pos","swap16","swap32","swap64","inspect","match","thisStart","thisEnd","thisCopy","targetCopy","includes","isFinite","toJSON","_arr","newBuf","sliceLen","readUIntLE","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","getLens","b64","validLen","lens","placeHoldersLen","_byteLength","tmp","Arr","curByte","revLookup","tripletToBase64","num","lookup","encodeChunk","output","extraBytes","len2","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","dupe_array","dupe_number","dupe","isSlowBuffer","Procedure","argTypes","shimArgs","arrayArgs","arrayBlockIndices","scalarArgs","offsetArgs","offsetArgIndex","indexArgs","shapeArgs","debug","compileCwise","proc_args","arg_type","blockIndices","printCode","blockSize","createThunk","vars","thunkName","typesig","string_typesig","shapeLengthConditions","shapeConditions","innerFill","nargs","has_index","pidx","outerFill","matched","indexStr","countMatches","orders","processBlock","block","dtypes","carg","re","RegExp","ptrStr","arrNum","offArgIndex","localStr","arrStr","reStrArr","ptrStrArr","typeSummary","summary","allEqual","digits","charAt","generateCWiseOp","blockBegin","blockEnd","loopBegin","loopEnd","loopOrders","newOrder","arglist","zeros","off_arg","init_string","uniq","loopName","unique_pred","ptr","unique_eq","unique","sorted","ndfft","pad","fftm","scratchMemory","buf_size","s1","s2","x1","x2","scratch_ptr","nrows","ncols","x_ptr","y_ptr","fftRadix2","fftBluestein","nn","i1","k","i2","l1","l2","c1","c2","t1","t2","u1","u2","row","k1","k2","k3","sqrt","scale_f","cos_ptr","sin_ptr","xs_ptr","ys_ptr","cft_ptr","sft_ptr","w","cos","sin","N","Meter","__WEBPACK_IMPORTED_MODULE_0__utils__","canvas","ctx","getContext","dimensions","height","width","restore","clearRect","save","translate","beginPath","arc","lineWidth","rotate","yCord","moveTo","lineTo","stroke","setupCanvas","drawNeedle"],"mappings":"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","file":"static/js/main.0edfb7a7.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId]) {\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/ \t\t}\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__webpack_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__webpack_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__webpack_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__webpack_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/swara/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(__webpack_require__.s = 8);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports) {\n\nvar g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar asap = __webpack_require__(11);\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n/***/ }),\n/* 3 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export noteFromPitch */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return degreesToRadians; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"b\", function() { return isEven; });\n/* unused harmony export isOdd */\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"c\", function() { return signalToNote; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_detect_pitch__ = __webpack_require__(17);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_detect_pitch___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_detect_pitch__);\nvar noteStrings=['C','C#','D','D#','E','F','F#','G','G#','A','A#','B'];var cents=function cents(f1,f2){return Math.round(1200*Math.log(f1/f2)/Math.log(2));};var frequencyFromNoteNumber=function frequencyFromNoteNumber(note){return 440*Math.pow(2,(note-57)/12);};// A4  is 440 Hz\n// C0 is key 0\n// C#0 is key 1\nvar noteFromPitch=function noteFromPitch(frequency){var key=12*Math.log(frequency/440)/Math.log(2)+57;var noteNum=Math.round(key%12);return{note:noteStrings[noteNum],octave:Math.trunc(key/12),pitch:frequency,cents:cents(frequency,frequencyFromNoteNumber(Math.round(key)))};};var degreesToRadians=function degreesToRadians(d){return d*Math.PI/180;};var isEven=function isEven(n){return n%2===0;};var isOdd=function isOdd(n){return Math.abs(n%2)===1;};var signalToNote=function signalToNote(signal){var note=void 0;var period=__WEBPACK_IMPORTED_MODULE_0_detect_pitch___default()(signal,0.2);var pitch=-1;if(period){pitch=Math.round(44100.0/period);note=noteFromPitch(pitch);};return note;};\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global, Buffer) {\n\nvar bits = __webpack_require__(1)\nvar dup = __webpack_require__(22)\n\n//Legacy pool support\nif(!global.__TYPEDARRAY_POOL) {\n  global.__TYPEDARRAY_POOL = {\n      UINT8   : dup([32, 0])\n    , UINT16  : dup([32, 0])\n    , UINT32  : dup([32, 0])\n    , INT8    : dup([32, 0])\n    , INT16   : dup([32, 0])\n    , INT32   : dup([32, 0])\n    , FLOAT   : dup([32, 0])\n    , DOUBLE  : dup([32, 0])\n    , DATA    : dup([32, 0])\n    , UINT8C  : dup([32, 0])\n    , BUFFER  : dup([32, 0])\n  }\n}\n\nvar hasUint8C = (typeof Uint8ClampedArray) !== 'undefined'\nvar POOL = global.__TYPEDARRAY_POOL\n\n//Upgrade pool\nif(!POOL.UINT8C) {\n  POOL.UINT8C = dup([32, 0])\n}\nif(!POOL.BUFFER) {\n  POOL.BUFFER = dup([32, 0])\n}\n\n//New technique: Only allocate from ArrayBufferView and Buffer\nvar DATA    = POOL.DATA\n  , BUFFER  = POOL.BUFFER\n\nexports.free = function free(array) {\n  if(Buffer.isBuffer(array)) {\n    BUFFER[bits.log2(array.length)].push(array)\n  } else {\n    if(Object.prototype.toString.call(array) !== '[object ArrayBuffer]') {\n      array = array.buffer\n    }\n    if(!array) {\n      return\n    }\n    var n = array.length || array.byteLength\n    var log_n = bits.log2(n)|0\n    DATA[log_n].push(array)\n  }\n}\n\nfunction freeArrayBuffer(buffer) {\n  if(!buffer) {\n    return\n  }\n  var n = buffer.length || buffer.byteLength\n  var log_n = bits.log2(n)\n  DATA[log_n].push(buffer)\n}\n\nfunction freeTypedArray(array) {\n  freeArrayBuffer(array.buffer)\n}\n\nexports.freeUint8 =\nexports.freeUint16 =\nexports.freeUint32 =\nexports.freeInt8 =\nexports.freeInt16 =\nexports.freeInt32 =\nexports.freeFloat32 = \nexports.freeFloat =\nexports.freeFloat64 = \nexports.freeDouble = \nexports.freeUint8Clamped = \nexports.freeDataView = freeTypedArray\n\nexports.freeArrayBuffer = freeArrayBuffer\n\nexports.freeBuffer = function freeBuffer(array) {\n  BUFFER[bits.log2(array.length)].push(array)\n}\n\nexports.malloc = function malloc(n, dtype) {\n  if(dtype === undefined || dtype === 'arraybuffer') {\n    return mallocArrayBuffer(n)\n  } else {\n    switch(dtype) {\n      case 'uint8':\n        return mallocUint8(n)\n      case 'uint16':\n        return mallocUint16(n)\n      case 'uint32':\n        return mallocUint32(n)\n      case 'int8':\n        return mallocInt8(n)\n      case 'int16':\n        return mallocInt16(n)\n      case 'int32':\n        return mallocInt32(n)\n      case 'float':\n      case 'float32':\n        return mallocFloat(n)\n      case 'double':\n      case 'float64':\n        return mallocDouble(n)\n      case 'uint8_clamped':\n        return mallocUint8Clamped(n)\n      case 'buffer':\n        return mallocBuffer(n)\n      case 'data':\n      case 'dataview':\n        return mallocDataView(n)\n\n      default:\n        return null\n    }\n  }\n  return null\n}\n\nfunction mallocArrayBuffer(n) {\n  var n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var d = DATA[log_n]\n  if(d.length > 0) {\n    return d.pop()\n  }\n  return new ArrayBuffer(n)\n}\nexports.mallocArrayBuffer = mallocArrayBuffer\n\nfunction mallocUint8(n) {\n  return new Uint8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocUint8 = mallocUint8\n\nfunction mallocUint16(n) {\n  return new Uint16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocUint16 = mallocUint16\n\nfunction mallocUint32(n) {\n  return new Uint32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocUint32 = mallocUint32\n\nfunction mallocInt8(n) {\n  return new Int8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocInt8 = mallocInt8\n\nfunction mallocInt16(n) {\n  return new Int16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocInt16 = mallocInt16\n\nfunction mallocInt32(n) {\n  return new Int32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocInt32 = mallocInt32\n\nfunction mallocFloat(n) {\n  return new Float32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocFloat32 = exports.mallocFloat = mallocFloat\n\nfunction mallocDouble(n) {\n  return new Float64Array(mallocArrayBuffer(8*n), 0, n)\n}\nexports.mallocFloat64 = exports.mallocDouble = mallocDouble\n\nfunction mallocUint8Clamped(n) {\n  if(hasUint8C) {\n    return new Uint8ClampedArray(mallocArrayBuffer(n), 0, n)\n  } else {\n    return mallocUint8(n)\n  }\n}\nexports.mallocUint8Clamped = mallocUint8Clamped\n\nfunction mallocDataView(n) {\n  return new DataView(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocDataView = mallocDataView\n\nfunction mallocBuffer(n) {\n  n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var cache = BUFFER[log_n]\n  if(cache.length > 0) {\n    return cache.pop()\n  }\n  return new Buffer(n)\n}\nexports.mallocBuffer = mallocBuffer\n\nexports.clearCache = function clearCache() {\n  for(var i=0; i<32; ++i) {\n    POOL.UINT8[i].length = 0\n    POOL.UINT16[i].length = 0\n    POOL.UINT32[i].length = 0\n    POOL.INT8[i].length = 0\n    POOL.INT16[i].length = 0\n    POOL.INT32[i].length = 0\n    POOL.FLOAT[i].length = 0\n    POOL.DOUBLE[i].length = 0\n    POOL.UINT8C[i].length = 0\n    DATA[i].length = 0\n    BUFFER[i].length = 0\n  }\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0), __webpack_require__(18).Buffer))\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar iota = __webpack_require__(23)\nvar isBuffer = __webpack_require__(24)\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar compile = __webpack_require__(25)\n\nvar EmptyProc = {\n  body: \"\",\n  args: [],\n  thisVars: [],\n  localVars: []\n}\n\nfunction fixup(x) {\n  if(!x) {\n    return EmptyProc\n  }\n  for(var i=0; i<x.args.length; ++i) {\n    var a = x.args[i]\n    if(i === 0) {\n      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }\n    } else {\n      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}\n    }\n  }\n  if(!x.thisVars) {\n    x.thisVars = []\n  }\n  if(!x.localVars) {\n    x.localVars = []\n  }\n  return x\n}\n\nfunction pcompile(user_args) {\n  return compile({\n    args:     user_args.args,\n    pre:      fixup(user_args.pre),\n    body:     fixup(user_args.body),\n    post:     fixup(user_args.proc),\n    funcName: user_args.funcName\n  })\n}\n\nfunction makeOp(user_args) {\n  var args = []\n  for(var i=0; i<user_args.args.length; ++i) {\n    args.push(\"a\"+i)\n  }\n  var wrapper = new Function(\"P\", [\n    \"return function \", user_args.funcName, \"_ndarrayops(\", args.join(\",\"), \") {P(\", args.join(\",\"), \");return a0}\"\n  ].join(\"\"))\n  return wrapper(pcompile(user_args))\n}\n\nvar assign_ops = {\n  add:  \"+\",\n  sub:  \"-\",\n  mul:  \"*\",\n  div:  \"/\",\n  mod:  \"%\",\n  band: \"&\",\n  bor:  \"|\",\n  bxor: \"^\",\n  lshift: \"<<\",\n  rshift: \">>\",\n  rrshift: \">>>\"\n}\n;(function(){\n  for(var id in assign_ops) {\n    var op = assign_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\",\"b\",\"c\"],\n             body: \"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\",\"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a\"+op+\"=b\"},\n      rvalue: true,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\", \"array\", \"scalar\"],\n      body: {args:[\"a\",\"b\",\"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\",\"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a\"+op+\"=s\"},\n      rvalue: true,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar unary_ops = {\n  not: \"!\",\n  bnot: \"~\",\n  neg: \"-\",\n  recip: \"1.0/\"\n}\n;(function(){\n  for(var id in unary_ops) {\n    var op = unary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a=\"+op+\"b\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\"],\n      body: {args:[\"a\"],\n             body:\"a=\"+op+\"a\"},\n      rvalue: true,\n      count: 2,\n      funcName: id+\"eq\"\n    })\n  }\n})();\n\nvar binary_ops = {\n  and: \"&&\",\n  or: \"||\",\n  eq: \"===\",\n  neq: \"!==\",\n  lt: \"<\",\n  gt: \">\",\n  leq: \"<=\",\n  geq: \">=\"\n}\n;(function() {\n  for(var id in binary_ops) {\n    var op = binary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\", \"b\", \"c\"],\n             body:\"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\",\"array\",\"scalar\"],\n      body: {args:[\"a\", \"b\", \"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\", \"b\"],\n             body:\"a=a\"+op+\"b\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\", \"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a=a\"+op+\"s\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar math_unary = [\n  \"abs\",\n  \"acos\",\n  \"asin\",\n  \"atan\",\n  \"ceil\",\n  \"cos\",\n  \"exp\",\n  \"floor\",\n  \"log\",\n  \"round\",\n  \"sin\",\n  \"sqrt\",\n  \"tan\"\n]\n;(function() {\n  for(var i=0; i<math_unary.length; ++i) {\n    var f = math_unary[i]\n    exports[f] = makeOp({\n                    args: [\"array\", \"array\"],\n                    pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                    body: {args:[\"a\",\"b\"], body:\"a=this_f(b)\", thisVars:[\"this_f\"]},\n                    funcName: f\n                  })\n    exports[f+\"eq\"] = makeOp({\n                      args: [\"array\"],\n                      pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                      body: {args: [\"a\"], body:\"a=this_f(a)\", thisVars:[\"this_f\"]},\n                      rvalue: true,\n                      count: 2,\n                      funcName: f+\"eq\"\n                    })\n  }\n})();\n\nvar math_comm = [\n  \"max\",\n  \"min\",\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_comm.length; ++i) {\n    var f= math_comm[i]\n    exports[f] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f\n                })\n    exports[f+\"s\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"s\"\n                  })\n    exports[f+\"eq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"eq\"\n                  })\n    exports[f+\"seq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"seq\"\n                  })\n  }\n})();\n\nvar math_noncomm = [\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_noncomm.length; ++i) {\n    var f= math_noncomm[i]\n    exports[f+\"op\"] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"op\"\n                })\n    exports[f+\"ops\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"ops\"\n                  })\n    exports[f+\"opeq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"opeq\"\n                  })\n    exports[f+\"opseq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"opseq\"\n                  })\n  }\n})();\n\nexports.any = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"if(a){return true}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return false\"},\n  funcName: \"any\"\n})\n\nexports.all = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1}], body: \"if(!x){return false}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"all\"\n})\n\nexports.sum = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s+=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"sum\"\n})\n\nexports.prod = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=1\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s*=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"prod\"\n})\n\nexports.norm2squared = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm2squared\"\n})\n  \nexports.norm2 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return Math.sqrt(this_s)\"},\n  funcName: \"norm2\"\n})\n  \n\nexports.norminf = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:4}], body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norminf\"\n})\n\nexports.norm1 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:3}], body: \"this_s+=a<0?-a:a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm1\"\n})\n\nexports.sup = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=-Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.inf = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.argmin = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})\n\nexports.argmax = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})  \n\nexports.random = makeOp({\n  args: [\"array\"],\n  pre: {args:[], body:\"this_f=Math.random\", thisVars:[\"this_f\"]},\n  body: {args: [\"a\"], body:\"a=this_f()\", thisVars:[\"this_f\"]},\n  funcName: \"random\"\n})\n\nexports.assign = makeOp({\n  args:[\"array\", \"array\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assign\" })\n\nexports.assigns = makeOp({\n  args:[\"array\", \"scalar\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assigns\" })\n\n\nexports.equals = compile({\n  args:[\"array\", \"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1},\n               {name:\"y\", lvalue:false, rvalue:true, count:1}], \n        body: \"if(x!==y){return false}\", \n        localVars: [], \n        thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"equals\"\n})\n\n\n\n\n/***/ }),\n/* 7 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Tuner; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__Meter_js__ = __webpack_require__(32);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var Tuner=function(){// {\n//   \"note\": \"D\",\n//   \"octave\": 6,\n//   \"pitch\": 1176,\n//   \"cents\": 2\n// }\nfunction Tuner(){_classCallCheck(this,Tuner);this.$note=document.getElementById('musical-note');this.$frequency=document.getElementById('frequency');this.$octave=document.getElementById('octave');this.$meter=document.getElementById('meter');this.$cents=document.getElementById('cents');this.meter=new __WEBPACK_IMPORTED_MODULE_0__Meter_js__[\"a\" /* Meter */](this.$meter);}_createClass(Tuner,[{key:'dispatchNote',value:function dispatchNote(n){var octave=n.octave,pitch=n.pitch,cents=n.cents,note=n.note;if(note){this.$note.innerHTML=note;this.$frequency.innerHTML=pitch;this.$octave.innerHTML=octave;this.$cents.innerHTML=cents;this.meter.reDraw(cents);};}}]);return Tuner;}();;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __webpack_require__) {\n\n__webpack_require__(9);\nmodule.exports = __webpack_require__(15);\n\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  __webpack_require__(10).enable();\n  window.Promise = __webpack_require__(12);\n}\n\n// fetch() polyfill for making API calls.\n__webpack_require__(13);\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = __webpack_require__(14);\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (false) {\n  require('raf').polyfill(global);\n}\n\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar Promise = __webpack_require__(2);\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = __webpack_require__(2);\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports) {\n\n(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n/***/ }),\n/* 15 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_css__ = __webpack_require__(16);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__index_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__utils__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__Tuner__ = __webpack_require__(7);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var NUM_SAMPLES=4096;var MusicalNote=function(){function MusicalNote(){_classCallCheck(this,MusicalNote);this.tuner=new __WEBPACK_IMPORTED_MODULE_2__Tuner__[\"a\" /* Tuner */]();this.signal=new Float32Array(NUM_SAMPLES);this.context=new(window.AudioContext||window.webkitAudioContext)();this.analyser=this.context.createAnalyser();this.analyser.fftSize=NUM_SAMPLES;this.setupAudio=this.setupAudio.bind(this);this.processAudio=this.processAudio.bind(this);this.setupAudio();}_createClass(MusicalNote,[{key:'setupAudio',value:function setupAudio(){var _this=this;var context=this.context,analyser=this.analyser;var audio=new Audio();audio.src='audio/whistling3.ogg';audio.loop=true;audio.addEventListener('canplay',function(){var stream=context.createMediaElementSource(audio);stream.connect(analyser);stream.connect(context.destination);_this.processAudio();});audio.play();}},{key:'processAudio',value:function processAudio(){var analyser=this.analyser,signal=this.signal;requestAnimationFrame(this.processAudio);analyser.getFloatTimeDomainData(signal);var note=Object(__WEBPACK_IMPORTED_MODULE_1__utils__[\"c\" /* signalToNote */])(signal);if(note)this.tuner.dispatchNote(note);;}}]);return MusicalNote;}();window.addEventListener(\"load\",function(){var musicalNote=new MusicalNote();});\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar bits = __webpack_require__(1)\nvar pool = __webpack_require__(4)\nvar ndarray = __webpack_require__(5)\nvar ops = __webpack_require__(6)\nvar fft = __webpack_require__(29)\nvar hann = __webpack_require__(31)\n\nfunction square(x, y) {\n  var n = x.length\n  for(var i=0; i<n; ++i) {\n    var a = x[i], b = y[i]\n    x[i] = a*a + b*b\n    y[i] = 0.0\n  }\n}\n\nfunction prefilter(x, xf, n) {\n  x[0] = 1\n  var s = 0\n  for(var i=1; i<n; ++i) {\n    var d = Math.max(xf - x[i], 0.0)\n    s += d\n    x[i] = d * i / s\n  }\n}\n\nfunction aperiodic(x, n) {\n  if(n<=3) {\n    return true\n  }\n  var d = ((x + 0.5 * n) % n) - 0.5 * n\n  return Math.abs(d) > 1\n}\n\nfunction findPeriod(x, lo, hi, threshold) {\n  var smallest = 1.0\n  var period = 0\n  for(var i=lo; i+2<hi; ++i) {\n    var y0 = x[i], y1 = x[i+1], y2 = x[i+2]\n    var denom = y2 - 2.0 * y1 + y0\n    if(Math.abs(denom) < 1e-6) {\n      if(y1 < smallest && aperiodic(i+1, period)) {\n        smallest = y1\n        period = i+1\n      }\n    } else {\n      var s = 0.5 * (y0 - y2) / denom\n      if(Math.abs(s) > 1.0) {\n        continue\n      }\n      var ymin = y1 + 0.25 * Math.pow(y0 - y2, 2) / denom\n      if(ymin < smallest) {\n        var f0 = i + s + 1\n        if(aperiodic(f0, period)) {\n          smallest = ymin\n          period = f0\n        }\n      }\n    }\n  }\n  if(smallest < 1.0 - threshold) {\n    return period\n  }\n  return 0.0\n}\n\nfunction detectPitch(signal, threshold) {\n  threshold = threshold || 0.0\n\n  var xs\n  if(signal.shape) {\n    xs = signal.shape[0]\n  } else {\n    xs = signal.length\n  }\n\n  var n = bits.nextPow2(2*xs)\n\n  var i, j, k\n  var re_arr = pool.mallocFloat(n)\n  var im_arr = pool.mallocFloat(n)\n  var X = ndarray(re_arr, [n], [1], 0)\n  var Y = ndarray(im_arr, [n], [1], 0)\n\n  //Initialize array depending on if it is a typed array\n  if(signal.shape) {\n    ops.assign(X.hi(xs), signal)\n  } else {\n    re_arr.set(signal)\n  }\n\n  //Compute magnitude\n  var magnitude = 0.0\n  for(var i=0; i<xs; ++i) {\n    var z = re_arr[i] *= hann(i, xs)\n    magnitude += Math.pow(z, 2)\n  }\n\n  //Zero out arrays\n  for(var i=xs; i<n; ++i) {\n    re_arr[i] = 0.0\n  }\n  for(var i=0; i<n; ++i) {\n    im_arr[i] = 0.0\n  }\n\n  //Autocorrelate\n  fft(1, X, Y)\n  square(re_arr, im_arr)\n  fft(-1, X, Y)\n\n  //Apply prefiltering\n  prefilter(re_arr, magnitude, xs)\n\n  //Detect pitch\n  var period = findPeriod(re_arr, 0, xs>>>1, threshold)\n\n  //Free temporary arrays\n  pool.freeFloat(re_arr)\n  pool.freeFloat(im_arr)\n\n  return period\n}\nmodule.exports = detectPitch\n\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n\n\nvar base64 = __webpack_require__(19)\nvar ieee754 = __webpack_require__(20)\nvar isArray = __webpack_require__(21)\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(0)))\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports) {\n\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\nvar toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction dupe_array(count, value, i) {\n  var c = count[i]|0\n  if(c <= 0) {\n    return []\n  }\n  var result = new Array(c), j\n  if(i === count.length-1) {\n    for(j=0; j<c; ++j) {\n      result[j] = value\n    }\n  } else {\n    for(j=0; j<c; ++j) {\n      result[j] = dupe_array(count, value, i+1)\n    }\n  }\n  return result\n}\n\nfunction dupe_number(count, value) {\n  var result, i\n  result = new Array(count)\n  for(i=0; i<count; ++i) {\n    result[i] = value\n  }\n  return result\n}\n\nfunction dupe(count, value) {\n  if(typeof value === \"undefined\") {\n    value = 0\n  }\n  switch(typeof count) {\n    case \"number\":\n      if(count > 0) {\n        return dupe_number(count|0, value)\n      }\n    break\n    case \"object\":\n      if(typeof (count.length) === \"number\") {\n        return dupe_array(count, value, 0)\n      }\n    break\n  }\n  return []\n}\n\nmodule.exports = dupe\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports) {\n\n/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar createThunk = __webpack_require__(26)\n\nfunction Procedure() {\n  this.argTypes = []\n  this.shimArgs = []\n  this.arrayArgs = []\n  this.arrayBlockIndices = []\n  this.scalarArgs = []\n  this.offsetArgs = []\n  this.offsetArgIndex = []\n  this.indexArgs = []\n  this.shapeArgs = []\n  this.funcName = \"\"\n  this.pre = null\n  this.body = null\n  this.post = null\n  this.debug = false\n}\n\nfunction compileCwise(user_args) {\n  //Create procedure\n  var proc = new Procedure()\n  \n  //Parse blocks\n  proc.pre    = user_args.pre\n  proc.body   = user_args.body\n  proc.post   = user_args.post\n\n  //Parse arguments\n  var proc_args = user_args.args.slice(0)\n  proc.argTypes = proc_args\n  for(var i=0; i<proc_args.length; ++i) {\n    var arg_type = proc_args[i]\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n      proc.argTypes[i] = \"array\"\n      proc.arrayArgs.push(i)\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n      proc.shimArgs.push(\"array\" + i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n        throw new Error(\"cwise: pre() block may not reference array args\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n        throw new Error(\"cwise: post() block may not reference array args\")\n      }\n    } else if(arg_type === \"scalar\") {\n      proc.scalarArgs.push(i)\n      proc.shimArgs.push(\"scalar\" + i)\n    } else if(arg_type === \"index\") {\n      proc.indexArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n        throw new Error(\"cwise: pre() block may not reference array index\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array index\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n        throw new Error(\"cwise: post() block may not reference array index\")\n      }\n    } else if(arg_type === \"shape\") {\n      proc.shapeArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n        throw new Error(\"cwise: pre() block may not write to array shape\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array shape\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n        throw new Error(\"cwise: post() block may not write to array shape\")\n      }\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n      proc.argTypes[i] = \"offset\"\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n      proc.offsetArgIndex.push(i)\n    } else {\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n    }\n  }\n  \n  //Make sure at least one array argument was specified\n  if(proc.arrayArgs.length <= 0) {\n    throw new Error(\"cwise: No array arguments specified\")\n  }\n  \n  //Make sure arguments are correct\n  if(proc.pre.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in pre() block\")\n  }\n  if(proc.body.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in body() block\")\n  }\n  if(proc.post.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in post() block\")\n  }\n\n  //Check debug flag\n  proc.debug = !!user_args.printCode || !!user_args.debug\n  \n  //Retrieve name\n  proc.funcName = user_args.funcName || \"cwise\"\n  \n  //Read in block size\n  proc.blockSize = user_args.blockSize || 64\n\n  return createThunk(proc)\n}\n\nmodule.exports = compileCwise\n\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\n// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\n\nvar compile = __webpack_require__(27)\n\nfunction createThunk(proc) {\n  var code = [\"'use strict'\", \"var CACHED={}\"]\n  var vars = []\n  var thunkName = proc.funcName + \"_cwise_thunk\"\n  \n  //Build thunk\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n  var typesig = []\n  var string_typesig = []\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n  var shapeLengthConditions = [], shapeConditions = []\n  // Process array arguments\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    var j = proc.arrayArgs[i]\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n    typesig.push(\"t\" + j)\n    typesig.push(\"r\" + j)\n    string_typesig.push(\"t\"+j)\n    string_typesig.push(\"r\"+j+\".join()\")\n    proc_args.push(\"array\" + j + \".data\")\n    proc_args.push(\"array\" + j + \".stride\")\n    proc_args.push(\"array\" + j + \".offset|0\")\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n    }\n  }\n  // Check for shape equality\n  if (proc.arrayArgs.length > 1) {\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n    code.push(\"}\")\n  }\n  // Process scalar arguments\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n  }\n  // Check for cached function (and if not present, generate it)\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n  vars.push(\"proc=CACHED[type]\")\n  code.push(\"var \" + vars.join(\",\"))\n  \n  code.push([\"if(!proc){\",\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\n  if(proc.debug) {\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  //Compile thunk\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n  return thunk(compile.bind(undefined, proc))\n}\n\nmodule.exports = createThunk\n\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nvar uniq = __webpack_require__(28)\n\n// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\n// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\nfunction innerFill(order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , has_index = proc.indexArgs.length>0\n    , code = []\n    , vars = []\n    , idx=0, pidx=0, i, j\n  for(i=0; i<dimension; ++i) { // Iteration variables\n    vars.push([\"i\",i,\"=0\"].join(\"\"))\n  }\n  //Compute scan deltas\n  for(j=0; j<nargs; ++j) {\n    for(i=0; i<dimension; ++i) {\n      pidx = idx\n      idx = order[i]\n      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\n        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\n      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\n        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\n      }\n    }\n  }\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }  \n  //Scan loop\n  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\n    idx = order[i]\n    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\n  }\n  //Push body of inner loop\n  code.push(body)\n  //Advance scan pointers\n  for(i=0; i<dimension; ++i) {\n    pidx = idx\n    idx = order[i]\n    for(j=0; j<nargs; ++j) {\n      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\n    }\n    if(has_index) {\n      if(i > 0) {\n        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\n      }\n      code.push([\"++index[\",idx,\"]\"].join(\"\"))\n    }\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\n// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\n//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\nfunction outerFill(matched, order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , blockSize = proc.blockSize\n    , has_index = proc.indexArgs.length > 0\n    , code = []\n  for(var i=0; i<nargs; ++i) {\n    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\n  }\n  //Generate loops for unmatched dimensions\n  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\n  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\n  for(var i=matched; i<dimension; ++i) {\n    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\n    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\n    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\n    code.push([\"j\",i,\"=0\"].join(\"\"))\n    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\n    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\n    if(has_index) {\n      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\n    }\n  }\n  for(var i=0; i<nargs; ++i) {\n    var indexStr = [\"offset\"+i]\n    for(var j=matched; j<dimension; ++j) {\n      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\n    }\n    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\n  }\n  code.push(innerFill(order, proc, body))\n  for(var i=matched; i<dimension; ++i) {\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n//Count the number of compatible inner orders\n// This is the length of the longest common prefix of the arrays in orders.\n// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\n// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\nfunction countMatches(orders) {\n  var matched = 0, dimension = orders[0].length\n  while(matched < dimension) {\n    for(var j=1; j<orders.length; ++j) {\n      if(orders[j][matched] !== orders[0][matched]) {\n        return matched\n      }\n    }\n    ++matched\n  }\n  return matched\n}\n\n//Processes a block according to the given data types\n// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\nfunction processBlock(block, proc, dtypes) {\n  var code = block.body\n  var pre = []\n  var post = []\n  for(var i=0; i<block.args.length; ++i) {\n    var carg = block.args[i]\n    if(carg.count <= 0) {\n      continue\n    }\n    var re = new RegExp(carg.name, \"g\")\n    var ptrStr = \"\"\n    var arrNum = proc.arrayArgs.indexOf(i)\n    switch(proc.argTypes[i]) {\n      case \"offset\":\n        var offArgIndex = proc.offsetArgIndex.indexOf(i)\n        var offArg = proc.offsetArgs[offArgIndex]\n        arrNum = offArg.array\n        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\n      case \"array\":\n        ptrStr = \"p\" + arrNum + ptrStr\n        var localStr = \"l\" + i\n        var arrStr = \"a\" + arrNum\n        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\n          if(carg.count === 1) { // Argument/array used only once(?)\n            if(dtypes[arrNum] === \"generic\") {\n              if(carg.lvalue) {\n                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n                code = code.replace(re, localStr)\n                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n              } else {\n                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n              }\n            } else {\n              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n            }\n          } else if(dtypes[arrNum] === \"generic\") {\n            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            }\n          } else {\n            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\n            }\n          }\n        } else { // Argument to body is a \"block\"\n          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\n          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\n            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\n            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\n          }\n          re = new RegExp(reStrArr.join(\"\"), \"g\")\n          ptrStr = ptrStrArr.join(\"+\")\n          if(dtypes[arrNum] === \"generic\") {\n            /*if(carg.lvalue) {\n              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n              code = code.replace(re, localStr)\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            } else {\n              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n            }*/\n            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\n          } else {\n            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\n            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n          }\n        }\n      break\n      case \"scalar\":\n        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\n      break\n      case \"index\":\n        code = code.replace(re, \"index\")\n      break\n      case \"shape\":\n        code = code.replace(re, \"shape\")\n      break\n    }\n  }\n  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\n}\n\nfunction typeSummary(dtypes) {\n  var summary = new Array(dtypes.length)\n  var allEqual = true\n  for(var i=0; i<dtypes.length; ++i) {\n    var t = dtypes[i]\n    var digits = t.match(/\\d+/)\n    if(!digits) {\n      digits = \"\"\n    } else {\n      digits = digits[0]\n    }\n    if(t.charAt(0) === 0) {\n      summary[i] = \"u\" + t.charAt(1) + digits\n    } else {\n      summary[i] = t.charAt(0) + digits\n    }\n    if(i > 0) {\n      allEqual = allEqual && summary[i] === summary[i-1]\n    }\n  }\n  if(allEqual) {\n    return summary[0]\n  }\n  return summary.join(\"\")\n}\n\n//Generates a cwise operator\nfunction generateCWiseOp(proc, typesig) {\n\n  //Compute dimension\n  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\n  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\n  var orders = new Array(proc.arrayArgs.length)\n  var dtypes = new Array(proc.arrayArgs.length)\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    dtypes[i] = typesig[2*i]\n    orders[i] = typesig[2*i+1]\n  }\n  \n  //Determine where block and loop indices start and end\n  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\n  var loopBegin = [], loopEnd = [] // These indices are iterated over\n  var loopOrders = [] // orders restricted to the loop indices\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    if (proc.arrayBlockIndices[i]<0) {\n      loopBegin.push(0)\n      loopEnd.push(dimension)\n      blockBegin.push(dimension)\n      blockEnd.push(dimension+proc.arrayBlockIndices[i])\n    } else {\n      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\n      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\n      blockBegin.push(0)\n      blockEnd.push(proc.arrayBlockIndices[i])\n    }\n    var newOrder = []\n    for(var j=0; j<orders[i].length; j++) {\n      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\n        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\n      }\n    }\n    loopOrders.push(newOrder)\n  }\n\n  //First create arguments for procedure\n  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\n  var code = [\"'use strict'\"]\n  var vars = []\n  \n  for(var j=0; j<dimension; ++j) {\n    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    arglist.push(\"a\"+i) // Actual data array\n    arglist.push(\"t\"+i) // Strides\n    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\n    \n    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\n      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\n    }\n    \n    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\n      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\n    }\n  }\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    arglist.push(\"Y\" + i)\n  }\n  if(proc.shapeArgs.length > 0) {\n    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\n  }\n  if(proc.indexArgs.length > 0) {\n    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\n    var zeros = new Array(dimension)\n    for(var i=0; i<dimension; ++i) {\n      zeros[i] = \"0\"\n    }\n    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\n  }\n  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\n    var off_arg = proc.offsetArgs[i]\n    var init_string = []\n    for(var j=0; j<off_arg.offset.length; ++j) {\n      if(off_arg.offset[j] === 0) {\n        continue\n      } else if(off_arg.offset[j] === 1) {\n        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \n      } else {\n        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\n      }\n    }\n    if(init_string.length === 0) {\n      vars.push(\"q\" + i + \"=0\")\n    } else {\n      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\n    }\n  }\n\n  //Prepare this variables\n  var thisVars = uniq([].concat(proc.pre.thisVars)\n                      .concat(proc.body.thisVars)\n                      .concat(proc.post.thisVars))\n  vars = vars.concat(thisVars)\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    code.push(\"p\"+i+\"|=0\")\n  }\n  \n  //Inline prelude\n  if(proc.pre.body.length > 3) {\n    code.push(processBlock(proc.pre, proc, dtypes))\n  }\n\n  //Process body\n  var body = processBlock(proc.body, proc, dtypes)\n  var matched = countMatches(loopOrders)\n  if(matched < dimension) {\n    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\n  } else {\n    code.push(innerFill(loopOrders[0], proc, body))\n  }\n\n  //Inline epilog\n  if(proc.post.body.length > 3) {\n    code.push(processBlock(proc.post, proc, dtypes))\n  }\n  \n  if(proc.debug) {\n    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\n  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\n  return f()\n}\nmodule.exports = generateCWiseOp\n\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\r\n\r\nvar ops = __webpack_require__(6)\r\nvar ndarray = __webpack_require__(5)\r\nvar pool = __webpack_require__(4)\r\nvar fftm = __webpack_require__(30)\r\n\r\nfunction ndfft(dir, x, y) {\r\n  var shape = x.shape\r\n    , d = shape.length\r\n    , size = 1\r\n    , stride = new Array(d)\r\n    , pad = 0\r\n    , i, j\r\n  for(i=d-1; i>=0; --i) {\r\n    stride[i] = size\r\n    size *= shape[i]\r\n    pad = Math.max(pad, fftm.scratchMemory(shape[i]))\r\n    if(x.shape[i] !== y.shape[i]) {\r\n      throw new Error('Shape mismatch, real and imaginary arrays must have same size')\r\n    }\r\n  }\r\n  var buf_size = 4 * size + pad\r\n  var buffer\r\n  if( x.dtype === 'array' ||\r\n      x.dtype === 'float64' ||\r\n      x.dtype === 'custom' ) {\r\n    buffer = pool.mallocDouble(buf_size)\r\n  } else {\r\n    buffer = pool.mallocFloat(buf_size)\r\n  }\r\n  var x1 = ndarray(buffer, shape.slice(0), stride, 0)\r\n    , y1 = ndarray(buffer, shape.slice(0), stride.slice(0), size)\r\n    , x2 = ndarray(buffer, shape.slice(0), stride.slice(0), 2*size)\r\n    , y2 = ndarray(buffer, shape.slice(0), stride.slice(0), 3*size)\r\n    , tmp, n, s1, s2\r\n    , scratch_ptr = 4 * size\r\n  \r\n  //Copy into x1/y1\r\n  ops.assign(x1, x)\r\n  ops.assign(y1, y)\r\n  \r\n  for(i=d-1; i>=0; --i) {\r\n    fftm(dir, size/shape[i], shape[i], buffer, x1.offset, y1.offset, scratch_ptr)\r\n    if(i === 0) {\r\n      break\r\n    }\r\n    \r\n    //Compute new stride for x2/y2\r\n    n = 1\r\n    s1 = x2.stride\r\n    s2 = y2.stride\r\n    for(j=i-1; j<d; ++j) {\r\n      s2[j] = s1[j] = n\r\n      n *= shape[j]\r\n    }\r\n    for(j=i-2; j>=0; --j) {\r\n      s2[j] = s1[j] = n\r\n      n *= shape[j]\r\n    }\r\n    \r\n    //Transpose\r\n    ops.assign(x2, x1)\r\n    ops.assign(y2, y1)\r\n    \r\n    //Swap buffers\r\n    tmp = x1\r\n    x1 = x2\r\n    x2 = tmp\r\n    tmp = y1\r\n    y1 = y2\r\n    y2 = tmp\r\n  }\r\n  \r\n  //Copy result back into x\r\n  ops.assign(x, x1)\r\n  ops.assign(y, y1)\r\n  \r\n  pool.free(buffer)\r\n}\r\n\r\nmodule.exports = ndfft\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __webpack_require__) {\n\nvar bits = __webpack_require__(1)\r\n\r\nfunction fft(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  if(bits.isPow2(ncols)) {\r\n    fftRadix2(dir, nrows, ncols, buffer, x_ptr, y_ptr)\r\n  } else {\r\n    fftBluestein(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr)\r\n  }\r\n}\r\nmodule.exports = fft\r\n\r\nfunction scratchMemory(n) {\r\n  if(bits.isPow2(n)) {\r\n    return 0\r\n  }\r\n  return 2 * n + 4 * bits.nextPow2(2*n + 1)\r\n}\r\nmodule.exports.scratchMemory = scratchMemory\r\n\r\n\r\n//Radix 2 FFT Adapted from Paul Bourke's C Implementation\r\nfunction fftRadix2(dir, nrows, ncols, buffer, x_ptr, y_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  var nn,m,i,i1,j,k,i2,l,l1,l2\r\n  var c1,c2,t,t1,t2,u1,u2,z,row,a,b,c,d,k1,k2,k3\r\n  \r\n  // Calculate the number of points\r\n  nn = ncols\r\n  m = bits.log2(nn)\r\n  \r\n  for(row=0; row<nrows; ++row) {  \r\n    // Do the bit reversal\r\n    i2 = nn >> 1;\r\n    j = 0;\r\n    for(i=0;i<nn-1;i++) {\r\n      if(i < j) {\r\n        t = buffer[x_ptr+i]\r\n        buffer[x_ptr+i] = buffer[x_ptr+j]\r\n        buffer[x_ptr+j] = t\r\n        t = buffer[y_ptr+i]\r\n        buffer[y_ptr+i] = buffer[y_ptr+j]\r\n        buffer[y_ptr+j] = t\r\n      }\r\n      k = i2\r\n      while(k <= j) {\r\n        j -= k\r\n        k >>= 1\r\n      }\r\n      j += k\r\n    }\r\n    \r\n    // Compute the FFT\r\n    c1 = -1.0\r\n    c2 = 0.0\r\n    l2 = 1\r\n    for(l=0;l<m;l++) {\r\n      l1 = l2\r\n      l2 <<= 1\r\n      u1 = 1.0\r\n      u2 = 0.0\r\n      for(j=0;j<l1;j++) {\r\n        for(i=j;i<nn;i+=l2) {\r\n          i1 = i + l1\r\n          a = buffer[x_ptr+i1]\r\n          b = buffer[y_ptr+i1]\r\n          c = buffer[x_ptr+i]\r\n          d = buffer[y_ptr+i]\r\n          k1 = u1 * (a + b)\r\n          k2 = a * (u2 - u1)\r\n          k3 = b * (u1 + u2)\r\n          t1 = k1 - k3\r\n          t2 = k1 + k2\r\n          buffer[x_ptr+i1] = c - t1\r\n          buffer[y_ptr+i1] = d - t2\r\n          buffer[x_ptr+i] += t1\r\n          buffer[y_ptr+i] += t2\r\n        }\r\n        k1 = c1 * (u1 + u2)\r\n        k2 = u1 * (c2 - c1)\r\n        k3 = u2 * (c1 + c2)\r\n        u1 = k1 - k3\r\n        u2 = k1 + k2\r\n      }\r\n      c2 = Math.sqrt((1.0 - c1) / 2.0)\r\n      if(dir < 0) {\r\n        c2 = -c2\r\n      }\r\n      c1 = Math.sqrt((1.0 + c1) / 2.0)\r\n    }\r\n    \r\n    // Scaling for inverse transform\r\n    if(dir < 0) {\r\n      var scale_f = 1.0 / nn\r\n      for(i=0;i<nn;i++) {\r\n        buffer[x_ptr+i] *= scale_f\r\n        buffer[y_ptr+i] *= scale_f\r\n      }\r\n    }\r\n    \r\n    // Advance pointers\r\n    x_ptr += ncols\r\n    y_ptr += ncols\r\n  }\r\n}\r\n\r\n// Use Bluestein algorithm for npot FFTs\r\n// Scratch memory required:  2 * ncols + 4 * bits.nextPow2(2*ncols + 1)\r\nfunction fftBluestein(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  scratch_ptr |= 0\r\n\r\n  // Initialize tables\r\n  var m = bits.nextPow2(2 * ncols + 1)\r\n    , cos_ptr = scratch_ptr\r\n    , sin_ptr = cos_ptr + ncols\r\n    , xs_ptr  = sin_ptr + ncols\r\n    , ys_ptr  = xs_ptr  + m\r\n    , cft_ptr = ys_ptr  + m\r\n    , sft_ptr = cft_ptr + m\r\n    , w = -dir * Math.PI / ncols\r\n    , row, a, b, c, d, k1, k2, k3\r\n    , i\r\n  for(i=0; i<ncols; ++i) {\r\n    a = w * ((i * i) % (ncols * 2))\r\n    c = Math.cos(a)\r\n    d = Math.sin(a)\r\n    buffer[cft_ptr+(m-i)] = buffer[cft_ptr+i] = buffer[cos_ptr+i] = c\r\n    buffer[sft_ptr+(m-i)] = buffer[sft_ptr+i] = buffer[sin_ptr+i] = d\r\n  }\r\n  for(i=ncols; i<=m-ncols; ++i) {\r\n    buffer[cft_ptr+i] = 0.0\r\n  }\r\n  for(i=ncols; i<=m-ncols; ++i) {\r\n    buffer[sft_ptr+i] = 0.0\r\n  }\r\n\r\n  fftRadix2(1, 1, m, buffer, cft_ptr, sft_ptr)\r\n  \r\n  //Compute scale factor\r\n  if(dir < 0) {\r\n    w = 1.0 / ncols\r\n  } else {\r\n    w = 1.0\r\n  }\r\n  \r\n  //Handle direction\r\n  for(row=0; row<nrows; ++row) {\r\n  \r\n    // Copy row into scratch memory, multiply weights\r\n    for(i=0; i<ncols; ++i) {\r\n      a = buffer[x_ptr+i]\r\n      b = buffer[y_ptr+i]\r\n      c = buffer[cos_ptr+i]\r\n      d = -buffer[sin_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[xs_ptr+i] = k1 - k3\r\n      buffer[ys_ptr+i] = k1 + k2\r\n    }\r\n    //Zero out the rest\r\n    for(i=ncols; i<m; ++i) {\r\n      buffer[xs_ptr+i] = 0.0\r\n    }\r\n    for(i=ncols; i<m; ++i) {\r\n      buffer[ys_ptr+i] = 0.0\r\n    }\r\n    \r\n    // FFT buffer\r\n    fftRadix2(1, 1, m, buffer, xs_ptr, ys_ptr)\r\n    \r\n    // Apply multiplier\r\n    for(i=0; i<m; ++i) {\r\n      a = buffer[xs_ptr+i]\r\n      b = buffer[ys_ptr+i]\r\n      c = buffer[cft_ptr+i]\r\n      d = buffer[sft_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[xs_ptr+i] = k1 - k3\r\n      buffer[ys_ptr+i] = k1 + k2\r\n    }\r\n    \r\n    // Inverse FFT buffer\r\n    fftRadix2(-1, 1, m, buffer, xs_ptr, ys_ptr)\r\n    \r\n    // Copy result back into x/y\r\n    for(i=0; i<ncols; ++i) {\r\n      a = buffer[xs_ptr+i]\r\n      b = buffer[ys_ptr+i]\r\n      c = buffer[cos_ptr+i]\r\n      d = -buffer[sin_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[x_ptr+i] = w * (k1 - k3)\r\n      buffer[y_ptr+i] = w * (k1 + k2)\r\n    }\r\n    \r\n    x_ptr += ncols\r\n    y_ptr += ncols\r\n  }\r\n}\r\n\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nfunction hann (i,N) {\n  return 0.5*(1 - Math.cos(6.283185307179586*i/(N-1)))\n}\n\nmodule.exports = hann\n\n\n/***/ }),\n/* 32 */\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"a\", function() { return Meter; });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__utils__ = __webpack_require__(3);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__Tuner__ = __webpack_require__(7);\nvar _createClass=function(){function defineProperties(target,props){for(var i=0;i<props.length;i++){var descriptor=props[i];descriptor.enumerable=descriptor.enumerable||false;descriptor.configurable=true;if(\"value\"in descriptor)descriptor.writable=true;Object.defineProperty(target,descriptor.key,descriptor);}}return function(Constructor,protoProps,staticProps){if(protoProps)defineProperties(Constructor.prototype,protoProps);if(staticProps)defineProperties(Constructor,staticProps);return Constructor;};}();function _classCallCheck(instance,Constructor){if(!(instance instanceof Constructor)){throw new TypeError(\"Cannot call a class as a function\");}}var Meter=function(){function Meter(canvas){_classCallCheck(this,Meter);this.canvas=canvas;this.ctx=this.canvas.getContext('2d');this.dimensions={height:this.canvas.height,width:this.canvas.width};this.reDraw(0);}_createClass(Meter,[{key:'setupCanvas',value:function setupCanvas(){var ctx=this.ctx,dimensions=this.dimensions;var height=dimensions.height,width=dimensions.width;ctx.restore();ctx.clearRect(0,0,width,height);ctx.save();// x = 200, y = 150\n// Move towards the centre\nctx.translate(width/2,height/2);ctx.beginPath();// Centre dot\nctx.arc(0,0,4,0,2*Math.PI,false);ctx.lineWidth=1.5;ctx.fill();// // Draw the meter\nctx.save();ctx.rotate(Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"a\" /* degreesToRadians */])(90));Array.from({length:19},function(x,j){return j*10;}).forEach(function(i){var yCord=-(Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"b\" /* isEven */])(i/10)?height/2-10:height/2-5);ctx.moveTo(0,yCord);ctx.lineTo(0,-height/2);ctx.rotate(Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"a\" /* degreesToRadians */])(-10));});ctx.stroke();ctx.restore();// Reset the roration\n}// An equally tempered semitone (the interval between two adjacent piano keys) spans 100 cents by definition\n},{key:'drawNeedle',value:function drawNeedle(cents){var ctx=this.ctx,dimensions=this.dimensions;var height=dimensions.height,width=dimensions.width;// Draw the needle\nctx.rotate(Object(__WEBPACK_IMPORTED_MODULE_0__utils__[\"a\" /* degreesToRadians */])(90*2*cents/100));ctx.moveTo(0,0);ctx.lineTo(0,-(height/2-20));ctx.stroke();}},{key:'reDraw',value:function reDraw(cents){this.setupCanvas();this.drawNeedle(cents);}}]);return Meter;}();\n\n/***/ })\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// static/js/main.0edfb7a7.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/swara/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 8);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 71491037c25f08f35011","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\n} catch(e) {\n\t// This works if the window reference is available\n\tif(typeof window === \"object\")\n\t\tg = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 0\n// module chunks = 0","/**\n * Bit twiddling hacks for JavaScript.\n *\n * Author: Mikola Lysenko\n *\n * Ported from Stanford bit twiddling hack library:\n *    http://graphics.stanford.edu/~seander/bithacks.html\n */\n\n\"use strict\"; \"use restrict\";\n\n//Number of bits in an integer\nvar INT_BITS = 32;\n\n//Constants\nexports.INT_BITS  = INT_BITS;\nexports.INT_MAX   =  0x7fffffff;\nexports.INT_MIN   = -1<<(INT_BITS-1);\n\n//Returns -1, 0, +1 depending on sign of x\nexports.sign = function(v) {\n  return (v > 0) - (v < 0);\n}\n\n//Computes absolute value of integer\nexports.abs = function(v) {\n  var mask = v >> (INT_BITS-1);\n  return (v ^ mask) - mask;\n}\n\n//Computes minimum of integers x and y\nexports.min = function(x, y) {\n  return y ^ ((x ^ y) & -(x < y));\n}\n\n//Computes maximum of integers x and y\nexports.max = function(x, y) {\n  return x ^ ((x ^ y) & -(x < y));\n}\n\n//Checks if a number is a power of two\nexports.isPow2 = function(v) {\n  return !(v & (v-1)) && (!!v);\n}\n\n//Computes log base 2 of v\nexports.log2 = function(v) {\n  var r, shift;\n  r =     (v > 0xFFFF) << 4; v >>>= r;\n  shift = (v > 0xFF  ) << 3; v >>>= shift; r |= shift;\n  shift = (v > 0xF   ) << 2; v >>>= shift; r |= shift;\n  shift = (v > 0x3   ) << 1; v >>>= shift; r |= shift;\n  return r | (v >> 1);\n}\n\n//Computes log base 10 of v\nexports.log10 = function(v) {\n  return  (v >= 1000000000) ? 9 : (v >= 100000000) ? 8 : (v >= 10000000) ? 7 :\n          (v >= 1000000) ? 6 : (v >= 100000) ? 5 : (v >= 10000) ? 4 :\n          (v >= 1000) ? 3 : (v >= 100) ? 2 : (v >= 10) ? 1 : 0;\n}\n\n//Counts number of bits\nexports.popCount = function(v) {\n  v = v - ((v >>> 1) & 0x55555555);\n  v = (v & 0x33333333) + ((v >>> 2) & 0x33333333);\n  return ((v + (v >>> 4) & 0xF0F0F0F) * 0x1010101) >>> 24;\n}\n\n//Counts number of trailing zeros\nfunction countTrailingZeros(v) {\n  var c = 32;\n  v &= -v;\n  if (v) c--;\n  if (v & 0x0000FFFF) c -= 16;\n  if (v & 0x00FF00FF) c -= 8;\n  if (v & 0x0F0F0F0F) c -= 4;\n  if (v & 0x33333333) c -= 2;\n  if (v & 0x55555555) c -= 1;\n  return c;\n}\nexports.countTrailingZeros = countTrailingZeros;\n\n//Rounds to next power of 2\nexports.nextPow2 = function(v) {\n  v += v === 0;\n  --v;\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v + 1;\n}\n\n//Rounds down to previous power of 2\nexports.prevPow2 = function(v) {\n  v |= v >>> 1;\n  v |= v >>> 2;\n  v |= v >>> 4;\n  v |= v >>> 8;\n  v |= v >>> 16;\n  return v - (v>>>1);\n}\n\n//Computes parity of word\nexports.parity = function(v) {\n  v ^= v >>> 16;\n  v ^= v >>> 8;\n  v ^= v >>> 4;\n  v &= 0xf;\n  return (0x6996 >>> v) & 1;\n}\n\nvar REVERSE_TABLE = new Array(256);\n\n(function(tab) {\n  for(var i=0; i<256; ++i) {\n    var v = i, r = i, s = 7;\n    for (v >>>= 1; v; v >>>= 1) {\n      r <<= 1;\n      r |= v & 1;\n      --s;\n    }\n    tab[i] = (r << s) & 0xff;\n  }\n})(REVERSE_TABLE);\n\n//Reverse bits in a 32 bit word\nexports.reverse = function(v) {\n  return  (REVERSE_TABLE[ v         & 0xff] << 24) |\n          (REVERSE_TABLE[(v >>> 8)  & 0xff] << 16) |\n          (REVERSE_TABLE[(v >>> 16) & 0xff] << 8)  |\n           REVERSE_TABLE[(v >>> 24) & 0xff];\n}\n\n//Interleave bits of 2 coordinates with 16 bits.  Useful for fast quadtree codes\nexports.interleave2 = function(x, y) {\n  x &= 0xFFFF;\n  x = (x | (x << 8)) & 0x00FF00FF;\n  x = (x | (x << 4)) & 0x0F0F0F0F;\n  x = (x | (x << 2)) & 0x33333333;\n  x = (x | (x << 1)) & 0x55555555;\n\n  y &= 0xFFFF;\n  y = (y | (y << 8)) & 0x00FF00FF;\n  y = (y | (y << 4)) & 0x0F0F0F0F;\n  y = (y | (y << 2)) & 0x33333333;\n  y = (y | (y << 1)) & 0x55555555;\n\n  return x | (y << 1);\n}\n\n//Extracts the nth interleaved component\nexports.deinterleave2 = function(v, n) {\n  v = (v >>> n) & 0x55555555;\n  v = (v | (v >>> 1))  & 0x33333333;\n  v = (v | (v >>> 2))  & 0x0F0F0F0F;\n  v = (v | (v >>> 4))  & 0x00FF00FF;\n  v = (v | (v >>> 16)) & 0x000FFFF;\n  return (v << 16) >> 16;\n}\n\n\n//Interleave bits of 3 coordinates, each with 10 bits.  Useful for fast octree codes\nexports.interleave3 = function(x, y, z) {\n  x &= 0x3FF;\n  x  = (x | (x<<16)) & 4278190335;\n  x  = (x | (x<<8))  & 251719695;\n  x  = (x | (x<<4))  & 3272356035;\n  x  = (x | (x<<2))  & 1227133513;\n\n  y &= 0x3FF;\n  y  = (y | (y<<16)) & 4278190335;\n  y  = (y | (y<<8))  & 251719695;\n  y  = (y | (y<<4))  & 3272356035;\n  y  = (y | (y<<2))  & 1227133513;\n  x |= (y << 1);\n  \n  z &= 0x3FF;\n  z  = (z | (z<<16)) & 4278190335;\n  z  = (z | (z<<8))  & 251719695;\n  z  = (z | (z<<4))  & 3272356035;\n  z  = (z | (z<<2))  & 1227133513;\n  \n  return x | (z << 2);\n}\n\n//Extracts nth interleaved component of a 3-tuple\nexports.deinterleave3 = function(v, n) {\n  v = (v >>> n)       & 1227133513;\n  v = (v | (v>>>2))   & 3272356035;\n  v = (v | (v>>>4))   & 251719695;\n  v = (v | (v>>>8))   & 4278190335;\n  v = (v | (v>>>16))  & 0x3FF;\n  return (v<<22)>>22;\n}\n\n//Computes next combination in colexicographic order (this is mistakenly called nextPermutation on the bit twiddling hacks page)\nexports.nextCombination = function(v) {\n  var t = v | (v - 1);\n  return (t + 1) | (((~t & -~t) - 1) >>> (countTrailingZeros(v) + 1));\n}\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bit-twiddle/twiddle.js\n// module id = 1\n// module chunks = 0","'use strict';\n\nvar asap = require('asap/raw');\n\nfunction noop() {}\n\n// States:\n//\n// 0 - pending\n// 1 - fulfilled with _value\n// 2 - rejected with _value\n// 3 - adopted the state of another promise, _value\n//\n// once the state is no longer pending (0) it is immutable\n\n// All `_` prefixed properties will be reduced to `_{random number}`\n// at build time to obfuscate them and discourage their use.\n// We don't use symbols or Object.defineProperty to fully hide them\n// because the performance isn't good enough.\n\n\n// to avoid using try/catch inside critical functions, we\n// extract them to here.\nvar LAST_ERROR = null;\nvar IS_ERROR = {};\nfunction getThen(obj) {\n  try {\n    return obj.then;\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nfunction tryCallOne(fn, a) {\n  try {\n    return fn(a);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\nfunction tryCallTwo(fn, a, b) {\n  try {\n    fn(a, b);\n  } catch (ex) {\n    LAST_ERROR = ex;\n    return IS_ERROR;\n  }\n}\n\nmodule.exports = Promise;\n\nfunction Promise(fn) {\n  if (typeof this !== 'object') {\n    throw new TypeError('Promises must be constructed via new');\n  }\n  if (typeof fn !== 'function') {\n    throw new TypeError('Promise constructor\\'s argument is not a function');\n  }\n  this._75 = 0;\n  this._83 = 0;\n  this._18 = null;\n  this._38 = null;\n  if (fn === noop) return;\n  doResolve(fn, this);\n}\nPromise._47 = null;\nPromise._71 = null;\nPromise._44 = noop;\n\nPromise.prototype.then = function(onFulfilled, onRejected) {\n  if (this.constructor !== Promise) {\n    return safeThen(this, onFulfilled, onRejected);\n  }\n  var res = new Promise(noop);\n  handle(this, new Handler(onFulfilled, onRejected, res));\n  return res;\n};\n\nfunction safeThen(self, onFulfilled, onRejected) {\n  return new self.constructor(function (resolve, reject) {\n    var res = new Promise(noop);\n    res.then(resolve, reject);\n    handle(self, new Handler(onFulfilled, onRejected, res));\n  });\n}\nfunction handle(self, deferred) {\n  while (self._83 === 3) {\n    self = self._18;\n  }\n  if (Promise._47) {\n    Promise._47(self);\n  }\n  if (self._83 === 0) {\n    if (self._75 === 0) {\n      self._75 = 1;\n      self._38 = deferred;\n      return;\n    }\n    if (self._75 === 1) {\n      self._75 = 2;\n      self._38 = [self._38, deferred];\n      return;\n    }\n    self._38.push(deferred);\n    return;\n  }\n  handleResolved(self, deferred);\n}\n\nfunction handleResolved(self, deferred) {\n  asap(function() {\n    var cb = self._83 === 1 ? deferred.onFulfilled : deferred.onRejected;\n    if (cb === null) {\n      if (self._83 === 1) {\n        resolve(deferred.promise, self._18);\n      } else {\n        reject(deferred.promise, self._18);\n      }\n      return;\n    }\n    var ret = tryCallOne(cb, self._18);\n    if (ret === IS_ERROR) {\n      reject(deferred.promise, LAST_ERROR);\n    } else {\n      resolve(deferred.promise, ret);\n    }\n  });\n}\nfunction resolve(self, newValue) {\n  // Promise Resolution Procedure: https://github.com/promises-aplus/promises-spec#the-promise-resolution-procedure\n  if (newValue === self) {\n    return reject(\n      self,\n      new TypeError('A promise cannot be resolved with itself.')\n    );\n  }\n  if (\n    newValue &&\n    (typeof newValue === 'object' || typeof newValue === 'function')\n  ) {\n    var then = getThen(newValue);\n    if (then === IS_ERROR) {\n      return reject(self, LAST_ERROR);\n    }\n    if (\n      then === self.then &&\n      newValue instanceof Promise\n    ) {\n      self._83 = 3;\n      self._18 = newValue;\n      finale(self);\n      return;\n    } else if (typeof then === 'function') {\n      doResolve(then.bind(newValue), self);\n      return;\n    }\n  }\n  self._83 = 1;\n  self._18 = newValue;\n  finale(self);\n}\n\nfunction reject(self, newValue) {\n  self._83 = 2;\n  self._18 = newValue;\n  if (Promise._71) {\n    Promise._71(self, newValue);\n  }\n  finale(self);\n}\nfunction finale(self) {\n  if (self._75 === 1) {\n    handle(self, self._38);\n    self._38 = null;\n  }\n  if (self._75 === 2) {\n    for (var i = 0; i < self._38.length; i++) {\n      handle(self, self._38[i]);\n    }\n    self._38 = null;\n  }\n}\n\nfunction Handler(onFulfilled, onRejected, promise){\n  this.onFulfilled = typeof onFulfilled === 'function' ? onFulfilled : null;\n  this.onRejected = typeof onRejected === 'function' ? onRejected : null;\n  this.promise = promise;\n}\n\n/**\n * Take a potentially misbehaving resolver function and make sure\n * onFulfilled and onRejected are only called once.\n *\n * Makes no guarantees about asynchrony.\n */\nfunction doResolve(fn, promise) {\n  var done = false;\n  var res = tryCallTwo(fn, function (value) {\n    if (done) return;\n    done = true;\n    resolve(promise, value);\n  }, function (reason) {\n    if (done) return;\n    done = true;\n    reject(promise, reason);\n  });\n  if (!done && res === IS_ERROR) {\n    done = true;\n    reject(promise, LAST_ERROR);\n  }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/core.js\n// module id = 2\n// module chunks = 0","import detectPitch from 'detect-pitch';\nconst noteStrings = [\n  'C',\n  'C#',\n  'D',\n  'D#',\n  'E',\n  'F',\n  'F#',\n  'G',\n  'G#',\n  'A',\n  'A#',\n  'B'\n];\n\nconst cents = (f1, f2) => (Math.round(1200 * Math.log(f1/f2)/Math.log(2)));\n\nconst frequencyFromNoteNumber =  note =>  {\n  return 440 * Math.pow(2,(note-57)/12);\n};\n\n// A4  is 440 Hz\n// C0 is key 0\n// C#0 is key 1\nexport const noteFromPitch = frequency => {\n  const key = 12 * Math.log(frequency/440)/Math.log(2) + 57;\n  const noteNum = Math.round(key % 12);\n\n  return {\n    note: noteStrings[noteNum],\n    octave: Math.trunc(key/12),\n    pitch: frequency,\n    cents: cents(frequency, frequencyFromNoteNumber(Math.round(key)))\n  };\n};\n\n\nexport const degreesToRadians = (d) => (d * Math.PI/180);\nexport const isEven = (n) => (n % 2 === 0);\nexport const isOdd = (n) => (Math.abs(n % 2) === 1);\n\nexport const signalToNote = (signal) => {\n  let note;\n  const period = detectPitch(signal, 0.2);\n  let pitch = -1;\n\n  if (period) {\n    pitch = Math.round(44100.0 / period);\n    note = noteFromPitch(pitch);\n  };\n  return note;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils.js","'use strict'\n\nvar bits = require('bit-twiddle')\nvar dup = require('dup')\n\n//Legacy pool support\nif(!global.__TYPEDARRAY_POOL) {\n  global.__TYPEDARRAY_POOL = {\n      UINT8   : dup([32, 0])\n    , UINT16  : dup([32, 0])\n    , UINT32  : dup([32, 0])\n    , INT8    : dup([32, 0])\n    , INT16   : dup([32, 0])\n    , INT32   : dup([32, 0])\n    , FLOAT   : dup([32, 0])\n    , DOUBLE  : dup([32, 0])\n    , DATA    : dup([32, 0])\n    , UINT8C  : dup([32, 0])\n    , BUFFER  : dup([32, 0])\n  }\n}\n\nvar hasUint8C = (typeof Uint8ClampedArray) !== 'undefined'\nvar POOL = global.__TYPEDARRAY_POOL\n\n//Upgrade pool\nif(!POOL.UINT8C) {\n  POOL.UINT8C = dup([32, 0])\n}\nif(!POOL.BUFFER) {\n  POOL.BUFFER = dup([32, 0])\n}\n\n//New technique: Only allocate from ArrayBufferView and Buffer\nvar DATA    = POOL.DATA\n  , BUFFER  = POOL.BUFFER\n\nexports.free = function free(array) {\n  if(Buffer.isBuffer(array)) {\n    BUFFER[bits.log2(array.length)].push(array)\n  } else {\n    if(Object.prototype.toString.call(array) !== '[object ArrayBuffer]') {\n      array = array.buffer\n    }\n    if(!array) {\n      return\n    }\n    var n = array.length || array.byteLength\n    var log_n = bits.log2(n)|0\n    DATA[log_n].push(array)\n  }\n}\n\nfunction freeArrayBuffer(buffer) {\n  if(!buffer) {\n    return\n  }\n  var n = buffer.length || buffer.byteLength\n  var log_n = bits.log2(n)\n  DATA[log_n].push(buffer)\n}\n\nfunction freeTypedArray(array) {\n  freeArrayBuffer(array.buffer)\n}\n\nexports.freeUint8 =\nexports.freeUint16 =\nexports.freeUint32 =\nexports.freeInt8 =\nexports.freeInt16 =\nexports.freeInt32 =\nexports.freeFloat32 = \nexports.freeFloat =\nexports.freeFloat64 = \nexports.freeDouble = \nexports.freeUint8Clamped = \nexports.freeDataView = freeTypedArray\n\nexports.freeArrayBuffer = freeArrayBuffer\n\nexports.freeBuffer = function freeBuffer(array) {\n  BUFFER[bits.log2(array.length)].push(array)\n}\n\nexports.malloc = function malloc(n, dtype) {\n  if(dtype === undefined || dtype === 'arraybuffer') {\n    return mallocArrayBuffer(n)\n  } else {\n    switch(dtype) {\n      case 'uint8':\n        return mallocUint8(n)\n      case 'uint16':\n        return mallocUint16(n)\n      case 'uint32':\n        return mallocUint32(n)\n      case 'int8':\n        return mallocInt8(n)\n      case 'int16':\n        return mallocInt16(n)\n      case 'int32':\n        return mallocInt32(n)\n      case 'float':\n      case 'float32':\n        return mallocFloat(n)\n      case 'double':\n      case 'float64':\n        return mallocDouble(n)\n      case 'uint8_clamped':\n        return mallocUint8Clamped(n)\n      case 'buffer':\n        return mallocBuffer(n)\n      case 'data':\n      case 'dataview':\n        return mallocDataView(n)\n\n      default:\n        return null\n    }\n  }\n  return null\n}\n\nfunction mallocArrayBuffer(n) {\n  var n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var d = DATA[log_n]\n  if(d.length > 0) {\n    return d.pop()\n  }\n  return new ArrayBuffer(n)\n}\nexports.mallocArrayBuffer = mallocArrayBuffer\n\nfunction mallocUint8(n) {\n  return new Uint8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocUint8 = mallocUint8\n\nfunction mallocUint16(n) {\n  return new Uint16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocUint16 = mallocUint16\n\nfunction mallocUint32(n) {\n  return new Uint32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocUint32 = mallocUint32\n\nfunction mallocInt8(n) {\n  return new Int8Array(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocInt8 = mallocInt8\n\nfunction mallocInt16(n) {\n  return new Int16Array(mallocArrayBuffer(2*n), 0, n)\n}\nexports.mallocInt16 = mallocInt16\n\nfunction mallocInt32(n) {\n  return new Int32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocInt32 = mallocInt32\n\nfunction mallocFloat(n) {\n  return new Float32Array(mallocArrayBuffer(4*n), 0, n)\n}\nexports.mallocFloat32 = exports.mallocFloat = mallocFloat\n\nfunction mallocDouble(n) {\n  return new Float64Array(mallocArrayBuffer(8*n), 0, n)\n}\nexports.mallocFloat64 = exports.mallocDouble = mallocDouble\n\nfunction mallocUint8Clamped(n) {\n  if(hasUint8C) {\n    return new Uint8ClampedArray(mallocArrayBuffer(n), 0, n)\n  } else {\n    return mallocUint8(n)\n  }\n}\nexports.mallocUint8Clamped = mallocUint8Clamped\n\nfunction mallocDataView(n) {\n  return new DataView(mallocArrayBuffer(n), 0, n)\n}\nexports.mallocDataView = mallocDataView\n\nfunction mallocBuffer(n) {\n  n = bits.nextPow2(n)\n  var log_n = bits.log2(n)\n  var cache = BUFFER[log_n]\n  if(cache.length > 0) {\n    return cache.pop()\n  }\n  return new Buffer(n)\n}\nexports.mallocBuffer = mallocBuffer\n\nexports.clearCache = function clearCache() {\n  for(var i=0; i<32; ++i) {\n    POOL.UINT8[i].length = 0\n    POOL.UINT16[i].length = 0\n    POOL.UINT32[i].length = 0\n    POOL.INT8[i].length = 0\n    POOL.INT16[i].length = 0\n    POOL.INT32[i].length = 0\n    POOL.FLOAT[i].length = 0\n    POOL.DOUBLE[i].length = 0\n    POOL.UINT8C[i].length = 0\n    DATA[i].length = 0\n    BUFFER[i].length = 0\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/typedarray-pool/pool.js\n// module id = 4\n// module chunks = 0","var iota = require(\"iota-array\")\nvar isBuffer = require(\"is-buffer\")\n\nvar hasTypedArrays  = ((typeof Float64Array) !== \"undefined\")\n\nfunction compare1st(a, b) {\n  return a[0] - b[0]\n}\n\nfunction order() {\n  var stride = this.stride\n  var terms = new Array(stride.length)\n  var i\n  for(i=0; i<terms.length; ++i) {\n    terms[i] = [Math.abs(stride[i]), i]\n  }\n  terms.sort(compare1st)\n  var result = new Array(terms.length)\n  for(i=0; i<result.length; ++i) {\n    result[i] = terms[i][1]\n  }\n  return result\n}\n\nfunction compileConstructor(dtype, dimension) {\n  var className = [\"View\", dimension, \"d\", dtype].join(\"\")\n  if(dimension < 0) {\n    className = \"View_Nil\" + dtype\n  }\n  var useGetters = (dtype === \"generic\")\n\n  if(dimension === -1) {\n    //Special case for trivial arrays\n    var code =\n      \"function \"+className+\"(a){this.data=a;};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return -1};\\\nproto.size=0;\\\nproto.dimension=-1;\\\nproto.shape=proto.stride=proto.order=[];\\\nproto.lo=proto.hi=proto.transpose=proto.step=\\\nfunction(){return new \"+className+\"(this.data);};\\\nproto.get=proto.set=function(){};\\\nproto.pick=function(){return null};\\\nreturn function construct_\"+className+\"(a){return new \"+className+\"(a);}\"\n    var procedure = new Function(code)\n    return procedure()\n  } else if(dimension === 0) {\n    //Special case for 0d arrays\n    var code =\n      \"function \"+className+\"(a,d) {\\\nthis.data = a;\\\nthis.offset = d\\\n};\\\nvar proto=\"+className+\".prototype;\\\nproto.dtype='\"+dtype+\"';\\\nproto.index=function(){return this.offset};\\\nproto.dimension=0;\\\nproto.size=1;\\\nproto.shape=\\\nproto.stride=\\\nproto.order=[];\\\nproto.lo=\\\nproto.hi=\\\nproto.transpose=\\\nproto.step=function \"+className+\"_copy() {\\\nreturn new \"+className+\"(this.data,this.offset)\\\n};\\\nproto.pick=function \"+className+\"_pick(){\\\nreturn TrivialArray(this.data);\\\n};\\\nproto.valueOf=proto.get=function \"+className+\"_get(){\\\nreturn \"+(useGetters ? \"this.data.get(this.offset)\" : \"this.data[this.offset]\")+\n\"};\\\nproto.set=function \"+className+\"_set(v){\\\nreturn \"+(useGetters ? \"this.data.set(this.offset,v)\" : \"this.data[this.offset]=v\")+\"\\\n};\\\nreturn function construct_\"+className+\"(a,b,c,d){return new \"+className+\"(a,d)}\"\n    var procedure = new Function(\"TrivialArray\", code)\n    return procedure(CACHED_CONSTRUCTORS[dtype][0])\n  }\n\n  var code = [\"'use strict'\"]\n\n  //Create constructor for view\n  var indices = iota(dimension)\n  var args = indices.map(function(i) { return \"i\"+i })\n  var index_str = \"this.offset+\" + indices.map(function(i) {\n        return \"this.stride[\" + i + \"]*i\" + i\n      }).join(\"+\")\n  var shapeArg = indices.map(function(i) {\n      return \"b\"+i\n    }).join(\",\")\n  var strideArg = indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")\n  code.push(\n    \"function \"+className+\"(a,\" + shapeArg + \",\" + strideArg + \",d){this.data=a\",\n      \"this.shape=[\" + shapeArg + \"]\",\n      \"this.stride=[\" + strideArg + \"]\",\n      \"this.offset=d|0}\",\n    \"var proto=\"+className+\".prototype\",\n    \"proto.dtype='\"+dtype+\"'\",\n    \"proto.dimension=\"+dimension)\n\n  //view.size:\n  code.push(\"Object.defineProperty(proto,'size',{get:function \"+className+\"_size(){\\\nreturn \"+indices.map(function(i) { return \"this.shape[\"+i+\"]\" }).join(\"*\"),\n\"}})\")\n\n  //view.order:\n  if(dimension === 1) {\n    code.push(\"proto.order=[0]\")\n  } else {\n    code.push(\"Object.defineProperty(proto,'order',{get:\")\n    if(dimension < 4) {\n      code.push(\"function \"+className+\"_order(){\")\n      if(dimension === 2) {\n        code.push(\"return (Math.abs(this.stride[0])>Math.abs(this.stride[1]))?[1,0]:[0,1]}})\")\n      } else if(dimension === 3) {\n        code.push(\n\"var s0=Math.abs(this.stride[0]),s1=Math.abs(this.stride[1]),s2=Math.abs(this.stride[2]);\\\nif(s0>s1){\\\nif(s1>s2){\\\nreturn [2,1,0];\\\n}else if(s0>s2){\\\nreturn [1,2,0];\\\n}else{\\\nreturn [1,0,2];\\\n}\\\n}else if(s0>s2){\\\nreturn [2,0,1];\\\n}else if(s2>s1){\\\nreturn [0,1,2];\\\n}else{\\\nreturn [0,2,1];\\\n}}})\")\n      }\n    } else {\n      code.push(\"ORDER})\")\n    }\n  }\n\n  //view.set(i0, ..., v):\n  code.push(\n\"proto.set=function \"+className+\"_set(\"+args.join(\",\")+\",v){\")\n  if(useGetters) {\n    code.push(\"return this.data.set(\"+index_str+\",v)}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]=v}\")\n  }\n\n  //view.get(i0, ...):\n  code.push(\"proto.get=function \"+className+\"_get(\"+args.join(\",\")+\"){\")\n  if(useGetters) {\n    code.push(\"return this.data.get(\"+index_str+\")}\")\n  } else {\n    code.push(\"return this.data[\"+index_str+\"]}\")\n  }\n\n  //view.index:\n  code.push(\n    \"proto.index=function \"+className+\"_index(\", args.join(), \"){return \"+index_str+\"}\")\n\n  //view.hi():\n  code.push(\"proto.hi=function \"+className+\"_hi(\"+args.join(\",\")+\"){return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return [\"(typeof i\",i,\"!=='number'||i\",i,\"<0)?this.shape[\", i, \"]:i\", i,\"|0\"].join(\"\")\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"this.stride[\"+i + \"]\"\n    }).join(\",\")+\",this.offset)}\")\n\n  //view.lo():\n  var a_vars = indices.map(function(i) { return \"a\"+i+\"=this.shape[\"+i+\"]\" })\n  var c_vars = indices.map(function(i) { return \"c\"+i+\"=this.stride[\"+i+\"]\" })\n  code.push(\"proto.lo=function \"+className+\"_lo(\"+args.join(\",\")+\"){var b=this.offset,d=0,\"+a_vars.join(\",\")+\",\"+c_vars.join(\",\"))\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){\\\nd=i\"+i+\"|0;\\\nb+=c\"+i+\"*d;\\\na\"+i+\"-=d}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\"+i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"c\"+i\n    }).join(\",\")+\",b)}\")\n\n  //view.step():\n  code.push(\"proto.step=function \"+className+\"_step(\"+args.join(\",\")+\"){var \"+\n    indices.map(function(i) {\n      return \"a\"+i+\"=this.shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\"+i+\"=this.stride[\"+i+\"]\"\n    }).join(\",\")+\",c=this.offset,d=0,ceil=Math.ceil\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\n\"if(typeof i\"+i+\"==='number'){\\\nd=i\"+i+\"|0;\\\nif(d<0){\\\nc+=b\"+i+\"*(a\"+i+\"-1);\\\na\"+i+\"=ceil(-a\"+i+\"/d)\\\n}else{\\\na\"+i+\"=ceil(a\"+i+\"/d)\\\n}\\\nb\"+i+\"*=d\\\n}\")\n  }\n  code.push(\"return new \"+className+\"(this.data,\"+\n    indices.map(function(i) {\n      return \"a\" + i\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"b\" + i\n    }).join(\",\")+\",c)}\")\n\n  //view.transpose():\n  var tShape = new Array(dimension)\n  var tStride = new Array(dimension)\n  for(var i=0; i<dimension; ++i) {\n    tShape[i] = \"a[i\"+i+\"]\"\n    tStride[i] = \"b[i\"+i+\"]\"\n  }\n  code.push(\"proto.transpose=function \"+className+\"_transpose(\"+args+\"){\"+\n    args.map(function(n,idx) { return n + \"=(\" + n + \"===undefined?\" + idx + \":\" + n + \"|0)\"}).join(\";\"),\n    \"var a=this.shape,b=this.stride;return new \"+className+\"(this.data,\"+tShape.join(\",\")+\",\"+tStride.join(\",\")+\",this.offset)}\")\n\n  //view.pick():\n  code.push(\"proto.pick=function \"+className+\"_pick(\"+args+\"){var a=[],b=[],c=this.offset\")\n  for(var i=0; i<dimension; ++i) {\n    code.push(\"if(typeof i\"+i+\"==='number'&&i\"+i+\">=0){c=(c+this.stride[\"+i+\"]*i\"+i+\")|0}else{a.push(this.shape[\"+i+\"]);b.push(this.stride[\"+i+\"])}\")\n  }\n  code.push(\"var ctor=CTOR_LIST[a.length+1];return ctor(this.data,a,b,c)}\")\n\n  //Add return statement\n  code.push(\"return function construct_\"+className+\"(data,shape,stride,offset){return new \"+className+\"(data,\"+\n    indices.map(function(i) {\n      return \"shape[\"+i+\"]\"\n    }).join(\",\")+\",\"+\n    indices.map(function(i) {\n      return \"stride[\"+i+\"]\"\n    }).join(\",\")+\",offset)}\")\n\n  //Compile procedure\n  var procedure = new Function(\"CTOR_LIST\", \"ORDER\", code.join(\"\\n\"))\n  return procedure(CACHED_CONSTRUCTORS[dtype], order)\n}\n\nfunction arrayDType(data) {\n  if(isBuffer(data)) {\n    return \"buffer\"\n  }\n  if(hasTypedArrays) {\n    switch(Object.prototype.toString.call(data)) {\n      case \"[object Float64Array]\":\n        return \"float64\"\n      case \"[object Float32Array]\":\n        return \"float32\"\n      case \"[object Int8Array]\":\n        return \"int8\"\n      case \"[object Int16Array]\":\n        return \"int16\"\n      case \"[object Int32Array]\":\n        return \"int32\"\n      case \"[object Uint8Array]\":\n        return \"uint8\"\n      case \"[object Uint16Array]\":\n        return \"uint16\"\n      case \"[object Uint32Array]\":\n        return \"uint32\"\n      case \"[object Uint8ClampedArray]\":\n        return \"uint8_clamped\"\n    }\n  }\n  if(Array.isArray(data)) {\n    return \"array\"\n  }\n  return \"generic\"\n}\n\nvar CACHED_CONSTRUCTORS = {\n  \"float32\":[],\n  \"float64\":[],\n  \"int8\":[],\n  \"int16\":[],\n  \"int32\":[],\n  \"uint8\":[],\n  \"uint16\":[],\n  \"uint32\":[],\n  \"array\":[],\n  \"uint8_clamped\":[],\n  \"buffer\":[],\n  \"generic\":[]\n}\n\n;(function() {\n  for(var id in CACHED_CONSTRUCTORS) {\n    CACHED_CONSTRUCTORS[id].push(compileConstructor(id, -1))\n  }\n});\n\nfunction wrappedNDArrayCtor(data, shape, stride, offset) {\n  if(data === undefined) {\n    var ctor = CACHED_CONSTRUCTORS.array[0]\n    return ctor([])\n  } else if(typeof data === \"number\") {\n    data = [data]\n  }\n  if(shape === undefined) {\n    shape = [ data.length ]\n  }\n  var d = shape.length\n  if(stride === undefined) {\n    stride = new Array(d)\n    for(var i=d-1, sz=1; i>=0; --i) {\n      stride[i] = sz\n      sz *= shape[i]\n    }\n  }\n  if(offset === undefined) {\n    offset = 0\n    for(var i=0; i<d; ++i) {\n      if(stride[i] < 0) {\n        offset -= (shape[i]-1)*stride[i]\n      }\n    }\n  }\n  var dtype = arrayDType(data)\n  var ctor_list = CACHED_CONSTRUCTORS[dtype]\n  while(ctor_list.length <= d+1) {\n    ctor_list.push(compileConstructor(dtype, ctor_list.length-1))\n  }\n  var ctor = ctor_list[d+1]\n  return ctor(data, shape, stride, offset)\n}\n\nmodule.exports = wrappedNDArrayCtor\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ndarray/ndarray.js\n// module id = 5\n// module chunks = 0","\"use strict\"\n\nvar compile = require(\"cwise-compiler\")\n\nvar EmptyProc = {\n  body: \"\",\n  args: [],\n  thisVars: [],\n  localVars: []\n}\n\nfunction fixup(x) {\n  if(!x) {\n    return EmptyProc\n  }\n  for(var i=0; i<x.args.length; ++i) {\n    var a = x.args[i]\n    if(i === 0) {\n      x.args[i] = {name: a, lvalue:true, rvalue: !!x.rvalue, count:x.count||1 }\n    } else {\n      x.args[i] = {name: a, lvalue:false, rvalue:true, count: 1}\n    }\n  }\n  if(!x.thisVars) {\n    x.thisVars = []\n  }\n  if(!x.localVars) {\n    x.localVars = []\n  }\n  return x\n}\n\nfunction pcompile(user_args) {\n  return compile({\n    args:     user_args.args,\n    pre:      fixup(user_args.pre),\n    body:     fixup(user_args.body),\n    post:     fixup(user_args.proc),\n    funcName: user_args.funcName\n  })\n}\n\nfunction makeOp(user_args) {\n  var args = []\n  for(var i=0; i<user_args.args.length; ++i) {\n    args.push(\"a\"+i)\n  }\n  var wrapper = new Function(\"P\", [\n    \"return function \", user_args.funcName, \"_ndarrayops(\", args.join(\",\"), \") {P(\", args.join(\",\"), \");return a0}\"\n  ].join(\"\"))\n  return wrapper(pcompile(user_args))\n}\n\nvar assign_ops = {\n  add:  \"+\",\n  sub:  \"-\",\n  mul:  \"*\",\n  div:  \"/\",\n  mod:  \"%\",\n  band: \"&\",\n  bor:  \"|\",\n  bxor: \"^\",\n  lshift: \"<<\",\n  rshift: \">>\",\n  rrshift: \">>>\"\n}\n;(function(){\n  for(var id in assign_ops) {\n    var op = assign_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\",\"b\",\"c\"],\n             body: \"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\",\"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a\"+op+\"=b\"},\n      rvalue: true,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\", \"array\", \"scalar\"],\n      body: {args:[\"a\",\"b\",\"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\",\"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a\"+op+\"=s\"},\n      rvalue: true,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar unary_ops = {\n  not: \"!\",\n  bnot: \"~\",\n  neg: \"-\",\n  recip: \"1.0/\"\n}\n;(function(){\n  for(var id in unary_ops) {\n    var op = unary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\",\"b\"],\n             body:\"a=\"+op+\"b\"},\n      funcName: id\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\"],\n      body: {args:[\"a\"],\n             body:\"a=\"+op+\"a\"},\n      rvalue: true,\n      count: 2,\n      funcName: id+\"eq\"\n    })\n  }\n})();\n\nvar binary_ops = {\n  and: \"&&\",\n  or: \"||\",\n  eq: \"===\",\n  neq: \"!==\",\n  lt: \"<\",\n  gt: \">\",\n  leq: \"<=\",\n  geq: \">=\"\n}\n;(function() {\n  for(var id in binary_ops) {\n    var op = binary_ops[id]\n    exports[id] = makeOp({\n      args: [\"array\",\"array\",\"array\"],\n      body: {args:[\"a\", \"b\", \"c\"],\n             body:\"a=b\"+op+\"c\"},\n      funcName: id\n    })\n    exports[id+\"s\"] = makeOp({\n      args: [\"array\",\"array\",\"scalar\"],\n      body: {args:[\"a\", \"b\", \"s\"],\n             body:\"a=b\"+op+\"s\"},\n      funcName: id+\"s\"\n    })\n    exports[id+\"eq\"] = makeOp({\n      args: [\"array\", \"array\"],\n      body: {args:[\"a\", \"b\"],\n             body:\"a=a\"+op+\"b\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"eq\"\n    })\n    exports[id+\"seq\"] = makeOp({\n      args: [\"array\", \"scalar\"],\n      body: {args:[\"a\",\"s\"],\n             body:\"a=a\"+op+\"s\"},\n      rvalue:true,\n      count:2,\n      funcName: id+\"seq\"\n    })\n  }\n})();\n\nvar math_unary = [\n  \"abs\",\n  \"acos\",\n  \"asin\",\n  \"atan\",\n  \"ceil\",\n  \"cos\",\n  \"exp\",\n  \"floor\",\n  \"log\",\n  \"round\",\n  \"sin\",\n  \"sqrt\",\n  \"tan\"\n]\n;(function() {\n  for(var i=0; i<math_unary.length; ++i) {\n    var f = math_unary[i]\n    exports[f] = makeOp({\n                    args: [\"array\", \"array\"],\n                    pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                    body: {args:[\"a\",\"b\"], body:\"a=this_f(b)\", thisVars:[\"this_f\"]},\n                    funcName: f\n                  })\n    exports[f+\"eq\"] = makeOp({\n                      args: [\"array\"],\n                      pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                      body: {args: [\"a\"], body:\"a=this_f(a)\", thisVars:[\"this_f\"]},\n                      rvalue: true,\n                      count: 2,\n                      funcName: f+\"eq\"\n                    })\n  }\n})();\n\nvar math_comm = [\n  \"max\",\n  \"min\",\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_comm.length; ++i) {\n    var f= math_comm[i]\n    exports[f] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f\n                })\n    exports[f+\"s\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(b,c)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"s\"\n                  })\n    exports[f+\"eq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"eq\"\n                  })\n    exports[f+\"seq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(a,b)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"seq\"\n                  })\n  }\n})();\n\nvar math_noncomm = [\n  \"atan2\",\n  \"pow\"\n]\n;(function(){\n  for(var i=0; i<math_noncomm.length; ++i) {\n    var f= math_noncomm[i]\n    exports[f+\"op\"] = makeOp({\n                  args:[\"array\", \"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"op\"\n                })\n    exports[f+\"ops\"] = makeOp({\n                  args:[\"array\", \"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\",\"c\"], body:\"a=this_f(c,b)\", thisVars:[\"this_f\"]},\n                  funcName: f+\"ops\"\n                  })\n    exports[f+\"opeq\"] = makeOp({ args:[\"array\", \"array\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue: true,\n                  count: 2,\n                  funcName: f+\"opeq\"\n                  })\n    exports[f+\"opseq\"] = makeOp({ args:[\"array\", \"scalar\"],\n                  pre: {args:[], body:\"this_f=Math.\"+f, thisVars:[\"this_f\"]},\n                  body: {args:[\"a\",\"b\"], body:\"a=this_f(b,a)\", thisVars:[\"this_f\"]},\n                  rvalue:true,\n                  count:2,\n                  funcName: f+\"opseq\"\n                  })\n  }\n})();\n\nexports.any = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"if(a){return true}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return false\"},\n  funcName: \"any\"\n})\n\nexports.all = compile({\n  args:[\"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1}], body: \"if(!x){return false}\", localVars: [], thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"all\"\n})\n\nexports.sum = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s+=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"sum\"\n})\n\nexports.prod = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=1\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:1}], body: \"this_s*=a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"prod\"\n})\n\nexports.norm2squared = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm2squared\"\n})\n  \nexports.norm2 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:2}], body: \"this_s+=a*a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return Math.sqrt(this_s)\"},\n  funcName: \"norm2\"\n})\n  \n\nexports.norminf = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:4}], body:\"if(-a>this_s){this_s=-a}else if(a>this_s){this_s=a}\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norminf\"\n})\n\nexports.norm1 = compile({\n  args:[\"array\"],\n  pre: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"this_s=0\"},\n  body: {args:[{name:\"a\", lvalue:false, rvalue:true, count:3}], body: \"this_s+=a<0?-a:a\", localVars: [], thisVars: [\"this_s\"]},\n  post: {args:[], localVars:[], thisVars:[\"this_s\"], body:\"return this_s\"},\n  funcName: \"norm1\"\n})\n\nexports.sup = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=-Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_>this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.inf = compile({\n  args: [ \"array\" ],\n  pre:\n   { body: \"this_h=Infinity\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  body:\n   { body: \"if(_inline_1_arg0_<this_h)this_h=_inline_1_arg0_\",\n     args: [{\"name\":\"_inline_1_arg0_\",\"lvalue\":false,\"rvalue\":true,\"count\":2} ],\n     thisVars: [ \"this_h\" ],\n     localVars: [] },\n  post:\n   { body: \"return this_h\",\n     args: [],\n     thisVars: [ \"this_h\" ],\n     localVars: [] }\n })\n\nexports.argmin = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_<this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})\n\nexports.argmax = compile({\n  args:[\"index\",\"array\",\"shape\"],\n  pre:{\n    body:\"{this_v=-Infinity;this_i=_inline_0_arg2_.slice(0)}\",\n    args:[\n      {name:\"_inline_0_arg0_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg1_\",lvalue:false,rvalue:false,count:0},\n      {name:\"_inline_0_arg2_\",lvalue:false,rvalue:true,count:1}\n      ],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[]},\n  body:{\n    body:\"{if(_inline_1_arg1_>this_v){this_v=_inline_1_arg1_;for(var _inline_1_k=0;_inline_1_k<_inline_1_arg0_.length;++_inline_1_k){this_i[_inline_1_k]=_inline_1_arg0_[_inline_1_k]}}}\",\n    args:[\n      {name:\"_inline_1_arg0_\",lvalue:false,rvalue:true,count:2},\n      {name:\"_inline_1_arg1_\",lvalue:false,rvalue:true,count:2}],\n    thisVars:[\"this_i\",\"this_v\"],\n    localVars:[\"_inline_1_k\"]},\n  post:{\n    body:\"{return this_i}\",\n    args:[],\n    thisVars:[\"this_i\"],\n    localVars:[]}\n})  \n\nexports.random = makeOp({\n  args: [\"array\"],\n  pre: {args:[], body:\"this_f=Math.random\", thisVars:[\"this_f\"]},\n  body: {args: [\"a\"], body:\"a=this_f()\", thisVars:[\"this_f\"]},\n  funcName: \"random\"\n})\n\nexports.assign = makeOp({\n  args:[\"array\", \"array\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assign\" })\n\nexports.assigns = makeOp({\n  args:[\"array\", \"scalar\"],\n  body: {args:[\"a\", \"b\"], body:\"a=b\"},\n  funcName: \"assigns\" })\n\n\nexports.equals = compile({\n  args:[\"array\", \"array\"],\n  pre: EmptyProc,\n  body: {args:[{name:\"x\", lvalue:false, rvalue:true, count:1},\n               {name:\"y\", lvalue:false, rvalue:true, count:1}], \n        body: \"if(x!==y){return false}\", \n        localVars: [], \n        thisVars: []},\n  post: {args:[], localVars:[], thisVars:[], body:\"return true\"},\n  funcName: \"equals\"\n})\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ndarray-ops/ndarray-ops.js\n// module id = 6\n// module chunks = 0","import { Meter } from './Meter.js';\n\nclass Tuner {\n  // {\n  //   \"note\": \"D\",\n  //   \"octave\": 6,\n  //   \"pitch\": 1176,\n  //   \"cents\": 2\n  // }\n  constructor() {\n    this.$note = document.getElementById('musical-note');\n    this.$frequency = document.getElementById('frequency');\n    this.$octave = document.getElementById('octave');\n    this.$meter = document.getElementById('meter');\n    this.$cents = document.getElementById('cents');\n    this.meter = new Meter(this.$meter);\n  }\n\n  dispatchNote(n) {\n    const { octave , pitch, cents, note } = n;\n    if (note) {\n      this.$note.innerHTML = note;\n      this.$frequency.innerHTML = pitch;\n      this.$octave.innerHTML = octave;\n      this.$cents.innerHTML = cents;\n      this.meter.reDraw(cents);\n    };\n  }\n};\n\nexport { Tuner };\n\n\n\n// WEBPACK FOOTER //\n// ./src/Tuner.js","// @remove-on-eject-begin\n/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n// @remove-on-eject-end\n'use strict';\n\nif (typeof Promise === 'undefined') {\n  // Rejection tracking prevents a common issue where React gets into an\n  // inconsistent state due to an error, but it gets swallowed by a Promise,\n  // and the user has no idea what causes React's erratic future behavior.\n  require('promise/lib/rejection-tracking').enable();\n  window.Promise = require('promise/lib/es6-extensions.js');\n}\n\n// fetch() polyfill for making API calls.\nrequire('whatwg-fetch');\n\n// Object.assign() is commonly used with React.\n// It will use the native implementation if it's present and isn't buggy.\nObject.assign = require('object-assign');\n\n// In tests, polyfill requestAnimationFrame since jsdom doesn't provide it yet.\n// We don't polyfill it in the browser--this is user's responsibility.\nif (process.env.NODE_ENV === 'test') {\n  require('raf').polyfill(global);\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-scripts/config/polyfills.js\n// module id = 9\n// module chunks = 0","'use strict';\n\nvar Promise = require('./core');\n\nvar DEFAULT_WHITELIST = [\n  ReferenceError,\n  TypeError,\n  RangeError\n];\n\nvar enabled = false;\nexports.disable = disable;\nfunction disable() {\n  enabled = false;\n  Promise._47 = null;\n  Promise._71 = null;\n}\n\nexports.enable = enable;\nfunction enable(options) {\n  options = options || {};\n  if (enabled) disable();\n  enabled = true;\n  var id = 0;\n  var displayId = 0;\n  var rejections = {};\n  Promise._47 = function (promise) {\n    if (\n      promise._83 === 2 && // IS REJECTED\n      rejections[promise._56]\n    ) {\n      if (rejections[promise._56].logged) {\n        onHandled(promise._56);\n      } else {\n        clearTimeout(rejections[promise._56].timeout);\n      }\n      delete rejections[promise._56];\n    }\n  };\n  Promise._71 = function (promise, err) {\n    if (promise._75 === 0) { // not yet handled\n      promise._56 = id++;\n      rejections[promise._56] = {\n        displayId: null,\n        error: err,\n        timeout: setTimeout(\n          onUnhandled.bind(null, promise._56),\n          // For reference errors and type errors, this almost always\n          // means the programmer made a mistake, so log them after just\n          // 100ms\n          // otherwise, wait 2 seconds to see if they get handled\n          matchWhitelist(err, DEFAULT_WHITELIST)\n            ? 100\n            : 2000\n        ),\n        logged: false\n      };\n    }\n  };\n  function onUnhandled(id) {\n    if (\n      options.allRejections ||\n      matchWhitelist(\n        rejections[id].error,\n        options.whitelist || DEFAULT_WHITELIST\n      )\n    ) {\n      rejections[id].displayId = displayId++;\n      if (options.onUnhandled) {\n        rejections[id].logged = true;\n        options.onUnhandled(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      } else {\n        rejections[id].logged = true;\n        logError(\n          rejections[id].displayId,\n          rejections[id].error\n        );\n      }\n    }\n  }\n  function onHandled(id) {\n    if (rejections[id].logged) {\n      if (options.onHandled) {\n        options.onHandled(rejections[id].displayId, rejections[id].error);\n      } else if (!rejections[id].onUnhandled) {\n        console.warn(\n          'Promise Rejection Handled (id: ' + rejections[id].displayId + '):'\n        );\n        console.warn(\n          '  This means you can ignore any previous messages of the form \"Possible Unhandled Promise Rejection\" with id ' +\n          rejections[id].displayId + '.'\n        );\n      }\n    }\n  }\n}\n\nfunction logError(id, error) {\n  console.warn('Possible Unhandled Promise Rejection (id: ' + id + '):');\n  var errStr = (error && (error.stack || error)) + '';\n  errStr.split('\\n').forEach(function (line) {\n    console.warn('  ' + line);\n  });\n}\n\nfunction matchWhitelist(error, list) {\n  return list.some(function (cls) {\n    return error instanceof cls;\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/rejection-tracking.js\n// module id = 10\n// module chunks = 0","\"use strict\";\n\n// Use the fastest means possible to execute a task in its own turn, with\n// priority over other events including IO, animation, reflow, and redraw\n// events in browsers.\n//\n// An exception thrown by a task will permanently interrupt the processing of\n// subsequent tasks. The higher level `asap` function ensures that if an\n// exception is thrown by a task, that the task queue will continue flushing as\n// soon as possible, but if you use `rawAsap` directly, you are responsible to\n// either ensure that no exceptions are thrown from your task, or to manually\n// call `rawAsap.requestFlush` if an exception is thrown.\nmodule.exports = rawAsap;\nfunction rawAsap(task) {\n    if (!queue.length) {\n        requestFlush();\n        flushing = true;\n    }\n    // Equivalent to push, but avoids a function call.\n    queue[queue.length] = task;\n}\n\nvar queue = [];\n// Once a flush has been requested, no further calls to `requestFlush` are\n// necessary until the next `flush` completes.\nvar flushing = false;\n// `requestFlush` is an implementation-specific method that attempts to kick\n// off a `flush` event as quickly as possible. `flush` will attempt to exhaust\n// the event queue before yielding to the browser's own event loop.\nvar requestFlush;\n// The position of the next task to execute in the task queue. This is\n// preserved between calls to `flush` so that it can be resumed if\n// a task throws an exception.\nvar index = 0;\n// If a task schedules additional tasks recursively, the task queue can grow\n// unbounded. To prevent memory exhaustion, the task queue will periodically\n// truncate already-completed tasks.\nvar capacity = 1024;\n\n// The flush function processes all tasks that have been scheduled with\n// `rawAsap` unless and until one of those tasks throws an exception.\n// If a task throws an exception, `flush` ensures that its state will remain\n// consistent and will resume where it left off when called again.\n// However, `flush` does not make any arrangements to be called again if an\n// exception is thrown.\nfunction flush() {\n    while (index < queue.length) {\n        var currentIndex = index;\n        // Advance the index before calling the task. This ensures that we will\n        // begin flushing on the next task the task throws an error.\n        index = index + 1;\n        queue[currentIndex].call();\n        // Prevent leaking memory for long chains of recursive calls to `asap`.\n        // If we call `asap` within tasks scheduled by `asap`, the queue will\n        // grow, but to avoid an O(n) walk for every task we execute, we don't\n        // shift tasks off the queue after they have been executed.\n        // Instead, we periodically shift 1024 tasks off the queue.\n        if (index > capacity) {\n            // Manually shift all values starting at the index back to the\n            // beginning of the queue.\n            for (var scan = 0, newLength = queue.length - index; scan < newLength; scan++) {\n                queue[scan] = queue[scan + index];\n            }\n            queue.length -= index;\n            index = 0;\n        }\n    }\n    queue.length = 0;\n    index = 0;\n    flushing = false;\n}\n\n// `requestFlush` is implemented using a strategy based on data collected from\n// every available SauceLabs Selenium web driver worker at time of writing.\n// https://docs.google.com/spreadsheets/d/1mG-5UYGup5qxGdEMWkhP6BWCz053NUb2E1QoUTU16uA/edit#gid=783724593\n\n// Safari 6 and 6.1 for desktop, iPad, and iPhone are the only browsers that\n// have WebKitMutationObserver but not un-prefixed MutationObserver.\n// Must use `global` or `self` instead of `window` to work in both frames and web\n// workers. `global` is a provision of Browserify, Mr, Mrs, or Mop.\n\n/* globals self */\nvar scope = typeof global !== \"undefined\" ? global : self;\nvar BrowserMutationObserver = scope.MutationObserver || scope.WebKitMutationObserver;\n\n// MutationObservers are desirable because they have high priority and work\n// reliably everywhere they are implemented.\n// They are implemented in all modern browsers.\n//\n// - Android 4-4.3\n// - Chrome 26-34\n// - Firefox 14-29\n// - Internet Explorer 11\n// - iPad Safari 6-7.1\n// - iPhone Safari 7-7.1\n// - Safari 6-7\nif (typeof BrowserMutationObserver === \"function\") {\n    requestFlush = makeRequestCallFromMutationObserver(flush);\n\n// MessageChannels are desirable because they give direct access to the HTML\n// task queue, are implemented in Internet Explorer 10, Safari 5.0-1, and Opera\n// 11-12, and in web workers in many engines.\n// Although message channels yield to any queued rendering and IO tasks, they\n// would be better than imposing the 4ms delay of timers.\n// However, they do not work reliably in Internet Explorer or Safari.\n\n// Internet Explorer 10 is the only browser that has setImmediate but does\n// not have MutationObservers.\n// Although setImmediate yields to the browser's renderer, it would be\n// preferrable to falling back to setTimeout since it does not have\n// the minimum 4ms penalty.\n// Unfortunately there appears to be a bug in Internet Explorer 10 Mobile (and\n// Desktop to a lesser extent) that renders both setImmediate and\n// MessageChannel useless for the purposes of ASAP.\n// https://github.com/kriskowal/q/issues/396\n\n// Timers are implemented universally.\n// We fall back to timers in workers in most engines, and in foreground\n// contexts in the following browsers.\n// However, note that even this simple case requires nuances to operate in a\n// broad spectrum of browsers.\n//\n// - Firefox 3-13\n// - Internet Explorer 6-9\n// - iPad Safari 4.3\n// - Lynx 2.8.7\n} else {\n    requestFlush = makeRequestCallFromTimer(flush);\n}\n\n// `requestFlush` requests that the high priority event queue be flushed as\n// soon as possible.\n// This is useful to prevent an error thrown in a task from stalling the event\n// queue if the exception handled by Node.js’s\n// `process.on(\"uncaughtException\")` or by a domain.\nrawAsap.requestFlush = requestFlush;\n\n// To request a high priority event, we induce a mutation observer by toggling\n// the text of a text node between \"1\" and \"-1\".\nfunction makeRequestCallFromMutationObserver(callback) {\n    var toggle = 1;\n    var observer = new BrowserMutationObserver(callback);\n    var node = document.createTextNode(\"\");\n    observer.observe(node, {characterData: true});\n    return function requestCall() {\n        toggle = -toggle;\n        node.data = toggle;\n    };\n}\n\n// The message channel technique was discovered by Malte Ubl and was the\n// original foundation for this library.\n// http://www.nonblocking.io/2011/06/windownexttick.html\n\n// Safari 6.0.5 (at least) intermittently fails to create message ports on a\n// page's first load. Thankfully, this version of Safari supports\n// MutationObservers, so we don't need to fall back in that case.\n\n// function makeRequestCallFromMessageChannel(callback) {\n//     var channel = new MessageChannel();\n//     channel.port1.onmessage = callback;\n//     return function requestCall() {\n//         channel.port2.postMessage(0);\n//     };\n// }\n\n// For reasons explained above, we are also unable to use `setImmediate`\n// under any circumstances.\n// Even if we were, there is another bug in Internet Explorer 10.\n// It is not sufficient to assign `setImmediate` to `requestFlush` because\n// `setImmediate` must be called *by name* and therefore must be wrapped in a\n// closure.\n// Never forget.\n\n// function makeRequestCallFromSetImmediate(callback) {\n//     return function requestCall() {\n//         setImmediate(callback);\n//     };\n// }\n\n// Safari 6.0 has a problem where timers will get lost while the user is\n// scrolling. This problem does not impact ASAP because Safari 6.0 supports\n// mutation observers, so that implementation is used instead.\n// However, if we ever elect to use timers in Safari, the prevalent work-around\n// is to add a scroll event listener that calls for a flush.\n\n// `setTimeout` does not call the passed callback if the delay is less than\n// approximately 7 in web workers in Firefox 8 through 18, and sometimes not\n// even then.\n\nfunction makeRequestCallFromTimer(callback) {\n    return function requestCall() {\n        // We dispatch a timeout with a specified delay of 0 for engines that\n        // can reliably accommodate that request. This will usually be snapped\n        // to a 4 milisecond delay, but once we're flushing, there's no delay\n        // between events.\n        var timeoutHandle = setTimeout(handleTimer, 0);\n        // However, since this timer gets frequently dropped in Firefox\n        // workers, we enlist an interval handle that will try to fire\n        // an event 20 times per second until it succeeds.\n        var intervalHandle = setInterval(handleTimer, 50);\n\n        function handleTimer() {\n            // Whichever timer succeeds will cancel both timers and\n            // execute the callback.\n            clearTimeout(timeoutHandle);\n            clearInterval(intervalHandle);\n            callback();\n        }\n    };\n}\n\n// This is for `asap.js` only.\n// Its name will be periodically randomized to break any code that depends on\n// its existence.\nrawAsap.makeRequestCallFromTimer = makeRequestCallFromTimer;\n\n// ASAP was originally a nextTick shim included in Q. This was factored out\n// into this ASAP package. It was later adapted to RSVP which made further\n// amendments. These decisions, particularly to marginalize MessageChannel and\n// to capture the MutationObserver implementation in a closure, were integrated\n// back into ASAP proper.\n// https://github.com/tildeio/rsvp.js/blob/cddf7232546a9cf858524b75cde6f9edf72620a7/lib/rsvp/asap.js\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/asap/browser-raw.js\n// module id = 11\n// module chunks = 0","'use strict';\n\n//This file contains the ES6 extensions to the core Promises/A+ API\n\nvar Promise = require('./core.js');\n\nmodule.exports = Promise;\n\n/* Static Functions */\n\nvar TRUE = valuePromise(true);\nvar FALSE = valuePromise(false);\nvar NULL = valuePromise(null);\nvar UNDEFINED = valuePromise(undefined);\nvar ZERO = valuePromise(0);\nvar EMPTYSTRING = valuePromise('');\n\nfunction valuePromise(value) {\n  var p = new Promise(Promise._44);\n  p._83 = 1;\n  p._18 = value;\n  return p;\n}\nPromise.resolve = function (value) {\n  if (value instanceof Promise) return value;\n\n  if (value === null) return NULL;\n  if (value === undefined) return UNDEFINED;\n  if (value === true) return TRUE;\n  if (value === false) return FALSE;\n  if (value === 0) return ZERO;\n  if (value === '') return EMPTYSTRING;\n\n  if (typeof value === 'object' || typeof value === 'function') {\n    try {\n      var then = value.then;\n      if (typeof then === 'function') {\n        return new Promise(then.bind(value));\n      }\n    } catch (ex) {\n      return new Promise(function (resolve, reject) {\n        reject(ex);\n      });\n    }\n  }\n  return valuePromise(value);\n};\n\nPromise.all = function (arr) {\n  var args = Array.prototype.slice.call(arr);\n\n  return new Promise(function (resolve, reject) {\n    if (args.length === 0) return resolve([]);\n    var remaining = args.length;\n    function res(i, val) {\n      if (val && (typeof val === 'object' || typeof val === 'function')) {\n        if (val instanceof Promise && val.then === Promise.prototype.then) {\n          while (val._83 === 3) {\n            val = val._18;\n          }\n          if (val._83 === 1) return res(i, val._18);\n          if (val._83 === 2) reject(val._18);\n          val.then(function (val) {\n            res(i, val);\n          }, reject);\n          return;\n        } else {\n          var then = val.then;\n          if (typeof then === 'function') {\n            var p = new Promise(then.bind(val));\n            p.then(function (val) {\n              res(i, val);\n            }, reject);\n            return;\n          }\n        }\n      }\n      args[i] = val;\n      if (--remaining === 0) {\n        resolve(args);\n      }\n    }\n    for (var i = 0; i < args.length; i++) {\n      res(i, args[i]);\n    }\n  });\n};\n\nPromise.reject = function (value) {\n  return new Promise(function (resolve, reject) {\n    reject(value);\n  });\n};\n\nPromise.race = function (values) {\n  return new Promise(function (resolve, reject) {\n    values.forEach(function(value){\n      Promise.resolve(value).then(resolve, reject);\n    });\n  });\n};\n\n/* Prototype Methods */\n\nPromise.prototype['catch'] = function (onRejected) {\n  return this.then(null, onRejected);\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/promise/lib/es6-extensions.js\n// module id = 12\n// module chunks = 0","(function(self) {\n  'use strict';\n\n  if (self.fetch) {\n    return\n  }\n\n  var support = {\n    searchParams: 'URLSearchParams' in self,\n    iterable: 'Symbol' in self && 'iterator' in Symbol,\n    blob: 'FileReader' in self && 'Blob' in self && (function() {\n      try {\n        new Blob()\n        return true\n      } catch(e) {\n        return false\n      }\n    })(),\n    formData: 'FormData' in self,\n    arrayBuffer: 'ArrayBuffer' in self\n  }\n\n  if (support.arrayBuffer) {\n    var viewClasses = [\n      '[object Int8Array]',\n      '[object Uint8Array]',\n      '[object Uint8ClampedArray]',\n      '[object Int16Array]',\n      '[object Uint16Array]',\n      '[object Int32Array]',\n      '[object Uint32Array]',\n      '[object Float32Array]',\n      '[object Float64Array]'\n    ]\n\n    var isDataView = function(obj) {\n      return obj && DataView.prototype.isPrototypeOf(obj)\n    }\n\n    var isArrayBufferView = ArrayBuffer.isView || function(obj) {\n      return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1\n    }\n  }\n\n  function normalizeName(name) {\n    if (typeof name !== 'string') {\n      name = String(name)\n    }\n    if (/[^a-z0-9\\-#$%&'*+.\\^_`|~]/i.test(name)) {\n      throw new TypeError('Invalid character in header field name')\n    }\n    return name.toLowerCase()\n  }\n\n  function normalizeValue(value) {\n    if (typeof value !== 'string') {\n      value = String(value)\n    }\n    return value\n  }\n\n  // Build a destructive iterator for the value list\n  function iteratorFor(items) {\n    var iterator = {\n      next: function() {\n        var value = items.shift()\n        return {done: value === undefined, value: value}\n      }\n    }\n\n    if (support.iterable) {\n      iterator[Symbol.iterator] = function() {\n        return iterator\n      }\n    }\n\n    return iterator\n  }\n\n  function Headers(headers) {\n    this.map = {}\n\n    if (headers instanceof Headers) {\n      headers.forEach(function(value, name) {\n        this.append(name, value)\n      }, this)\n    } else if (Array.isArray(headers)) {\n      headers.forEach(function(header) {\n        this.append(header[0], header[1])\n      }, this)\n    } else if (headers) {\n      Object.getOwnPropertyNames(headers).forEach(function(name) {\n        this.append(name, headers[name])\n      }, this)\n    }\n  }\n\n  Headers.prototype.append = function(name, value) {\n    name = normalizeName(name)\n    value = normalizeValue(value)\n    var oldValue = this.map[name]\n    this.map[name] = oldValue ? oldValue+','+value : value\n  }\n\n  Headers.prototype['delete'] = function(name) {\n    delete this.map[normalizeName(name)]\n  }\n\n  Headers.prototype.get = function(name) {\n    name = normalizeName(name)\n    return this.has(name) ? this.map[name] : null\n  }\n\n  Headers.prototype.has = function(name) {\n    return this.map.hasOwnProperty(normalizeName(name))\n  }\n\n  Headers.prototype.set = function(name, value) {\n    this.map[normalizeName(name)] = normalizeValue(value)\n  }\n\n  Headers.prototype.forEach = function(callback, thisArg) {\n    for (var name in this.map) {\n      if (this.map.hasOwnProperty(name)) {\n        callback.call(thisArg, this.map[name], name, this)\n      }\n    }\n  }\n\n  Headers.prototype.keys = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push(name) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.values = function() {\n    var items = []\n    this.forEach(function(value) { items.push(value) })\n    return iteratorFor(items)\n  }\n\n  Headers.prototype.entries = function() {\n    var items = []\n    this.forEach(function(value, name) { items.push([name, value]) })\n    return iteratorFor(items)\n  }\n\n  if (support.iterable) {\n    Headers.prototype[Symbol.iterator] = Headers.prototype.entries\n  }\n\n  function consumed(body) {\n    if (body.bodyUsed) {\n      return Promise.reject(new TypeError('Already read'))\n    }\n    body.bodyUsed = true\n  }\n\n  function fileReaderReady(reader) {\n    return new Promise(function(resolve, reject) {\n      reader.onload = function() {\n        resolve(reader.result)\n      }\n      reader.onerror = function() {\n        reject(reader.error)\n      }\n    })\n  }\n\n  function readBlobAsArrayBuffer(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsArrayBuffer(blob)\n    return promise\n  }\n\n  function readBlobAsText(blob) {\n    var reader = new FileReader()\n    var promise = fileReaderReady(reader)\n    reader.readAsText(blob)\n    return promise\n  }\n\n  function readArrayBufferAsText(buf) {\n    var view = new Uint8Array(buf)\n    var chars = new Array(view.length)\n\n    for (var i = 0; i < view.length; i++) {\n      chars[i] = String.fromCharCode(view[i])\n    }\n    return chars.join('')\n  }\n\n  function bufferClone(buf) {\n    if (buf.slice) {\n      return buf.slice(0)\n    } else {\n      var view = new Uint8Array(buf.byteLength)\n      view.set(new Uint8Array(buf))\n      return view.buffer\n    }\n  }\n\n  function Body() {\n    this.bodyUsed = false\n\n    this._initBody = function(body) {\n      this._bodyInit = body\n      if (!body) {\n        this._bodyText = ''\n      } else if (typeof body === 'string') {\n        this._bodyText = body\n      } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {\n        this._bodyBlob = body\n      } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {\n        this._bodyFormData = body\n      } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n        this._bodyText = body.toString()\n      } else if (support.arrayBuffer && support.blob && isDataView(body)) {\n        this._bodyArrayBuffer = bufferClone(body.buffer)\n        // IE 10-11 can't handle a DataView body.\n        this._bodyInit = new Blob([this._bodyArrayBuffer])\n      } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {\n        this._bodyArrayBuffer = bufferClone(body)\n      } else {\n        throw new Error('unsupported BodyInit type')\n      }\n\n      if (!this.headers.get('content-type')) {\n        if (typeof body === 'string') {\n          this.headers.set('content-type', 'text/plain;charset=UTF-8')\n        } else if (this._bodyBlob && this._bodyBlob.type) {\n          this.headers.set('content-type', this._bodyBlob.type)\n        } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {\n          this.headers.set('content-type', 'application/x-www-form-urlencoded;charset=UTF-8')\n        }\n      }\n    }\n\n    if (support.blob) {\n      this.blob = function() {\n        var rejected = consumed(this)\n        if (rejected) {\n          return rejected\n        }\n\n        if (this._bodyBlob) {\n          return Promise.resolve(this._bodyBlob)\n        } else if (this._bodyArrayBuffer) {\n          return Promise.resolve(new Blob([this._bodyArrayBuffer]))\n        } else if (this._bodyFormData) {\n          throw new Error('could not read FormData body as blob')\n        } else {\n          return Promise.resolve(new Blob([this._bodyText]))\n        }\n      }\n\n      this.arrayBuffer = function() {\n        if (this._bodyArrayBuffer) {\n          return consumed(this) || Promise.resolve(this._bodyArrayBuffer)\n        } else {\n          return this.blob().then(readBlobAsArrayBuffer)\n        }\n      }\n    }\n\n    this.text = function() {\n      var rejected = consumed(this)\n      if (rejected) {\n        return rejected\n      }\n\n      if (this._bodyBlob) {\n        return readBlobAsText(this._bodyBlob)\n      } else if (this._bodyArrayBuffer) {\n        return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer))\n      } else if (this._bodyFormData) {\n        throw new Error('could not read FormData body as text')\n      } else {\n        return Promise.resolve(this._bodyText)\n      }\n    }\n\n    if (support.formData) {\n      this.formData = function() {\n        return this.text().then(decode)\n      }\n    }\n\n    this.json = function() {\n      return this.text().then(JSON.parse)\n    }\n\n    return this\n  }\n\n  // HTTP methods whose capitalization should be normalized\n  var methods = ['DELETE', 'GET', 'HEAD', 'OPTIONS', 'POST', 'PUT']\n\n  function normalizeMethod(method) {\n    var upcased = method.toUpperCase()\n    return (methods.indexOf(upcased) > -1) ? upcased : method\n  }\n\n  function Request(input, options) {\n    options = options || {}\n    var body = options.body\n\n    if (input instanceof Request) {\n      if (input.bodyUsed) {\n        throw new TypeError('Already read')\n      }\n      this.url = input.url\n      this.credentials = input.credentials\n      if (!options.headers) {\n        this.headers = new Headers(input.headers)\n      }\n      this.method = input.method\n      this.mode = input.mode\n      if (!body && input._bodyInit != null) {\n        body = input._bodyInit\n        input.bodyUsed = true\n      }\n    } else {\n      this.url = String(input)\n    }\n\n    this.credentials = options.credentials || this.credentials || 'omit'\n    if (options.headers || !this.headers) {\n      this.headers = new Headers(options.headers)\n    }\n    this.method = normalizeMethod(options.method || this.method || 'GET')\n    this.mode = options.mode || this.mode || null\n    this.referrer = null\n\n    if ((this.method === 'GET' || this.method === 'HEAD') && body) {\n      throw new TypeError('Body not allowed for GET or HEAD requests')\n    }\n    this._initBody(body)\n  }\n\n  Request.prototype.clone = function() {\n    return new Request(this, { body: this._bodyInit })\n  }\n\n  function decode(body) {\n    var form = new FormData()\n    body.trim().split('&').forEach(function(bytes) {\n      if (bytes) {\n        var split = bytes.split('=')\n        var name = split.shift().replace(/\\+/g, ' ')\n        var value = split.join('=').replace(/\\+/g, ' ')\n        form.append(decodeURIComponent(name), decodeURIComponent(value))\n      }\n    })\n    return form\n  }\n\n  function parseHeaders(rawHeaders) {\n    var headers = new Headers()\n    rawHeaders.split(/\\r?\\n/).forEach(function(line) {\n      var parts = line.split(':')\n      var key = parts.shift().trim()\n      if (key) {\n        var value = parts.join(':').trim()\n        headers.append(key, value)\n      }\n    })\n    return headers\n  }\n\n  Body.call(Request.prototype)\n\n  function Response(bodyInit, options) {\n    if (!options) {\n      options = {}\n    }\n\n    this.type = 'default'\n    this.status = 'status' in options ? options.status : 200\n    this.ok = this.status >= 200 && this.status < 300\n    this.statusText = 'statusText' in options ? options.statusText : 'OK'\n    this.headers = new Headers(options.headers)\n    this.url = options.url || ''\n    this._initBody(bodyInit)\n  }\n\n  Body.call(Response.prototype)\n\n  Response.prototype.clone = function() {\n    return new Response(this._bodyInit, {\n      status: this.status,\n      statusText: this.statusText,\n      headers: new Headers(this.headers),\n      url: this.url\n    })\n  }\n\n  Response.error = function() {\n    var response = new Response(null, {status: 0, statusText: ''})\n    response.type = 'error'\n    return response\n  }\n\n  var redirectStatuses = [301, 302, 303, 307, 308]\n\n  Response.redirect = function(url, status) {\n    if (redirectStatuses.indexOf(status) === -1) {\n      throw new RangeError('Invalid status code')\n    }\n\n    return new Response(null, {status: status, headers: {location: url}})\n  }\n\n  self.Headers = Headers\n  self.Request = Request\n  self.Response = Response\n\n  self.fetch = function(input, init) {\n    return new Promise(function(resolve, reject) {\n      var request = new Request(input, init)\n      var xhr = new XMLHttpRequest()\n\n      xhr.onload = function() {\n        var options = {\n          status: xhr.status,\n          statusText: xhr.statusText,\n          headers: parseHeaders(xhr.getAllResponseHeaders() || '')\n        }\n        options.url = 'responseURL' in xhr ? xhr.responseURL : options.headers.get('X-Request-URL')\n        var body = 'response' in xhr ? xhr.response : xhr.responseText\n        resolve(new Response(body, options))\n      }\n\n      xhr.onerror = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.ontimeout = function() {\n        reject(new TypeError('Network request failed'))\n      }\n\n      xhr.open(request.method, request.url, true)\n\n      if (request.credentials === 'include') {\n        xhr.withCredentials = true\n      }\n\n      if ('responseType' in xhr && support.blob) {\n        xhr.responseType = 'blob'\n      }\n\n      request.headers.forEach(function(value, name) {\n        xhr.setRequestHeader(name, value)\n      })\n\n      xhr.send(typeof request._bodyInit === 'undefined' ? null : request._bodyInit)\n    })\n  }\n  self.fetch.polyfill = true\n})(typeof self !== 'undefined' ? self : this);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/whatwg-fetch/fetch.js\n// module id = 13\n// module chunks = 0","/*\nobject-assign\n(c) Sindre Sorhus\n@license MIT\n*/\n\n'use strict';\n/* eslint-disable no-unused-vars */\nvar getOwnPropertySymbols = Object.getOwnPropertySymbols;\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar propIsEnumerable = Object.prototype.propertyIsEnumerable;\n\nfunction toObject(val) {\n\tif (val === null || val === undefined) {\n\t\tthrow new TypeError('Object.assign cannot be called with null or undefined');\n\t}\n\n\treturn Object(val);\n}\n\nfunction shouldUseNative() {\n\ttry {\n\t\tif (!Object.assign) {\n\t\t\treturn false;\n\t\t}\n\n\t\t// Detect buggy property enumeration order in older V8 versions.\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=4118\n\t\tvar test1 = new String('abc');  // eslint-disable-line no-new-wrappers\n\t\ttest1[5] = 'de';\n\t\tif (Object.getOwnPropertyNames(test1)[0] === '5') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test2 = {};\n\t\tfor (var i = 0; i < 10; i++) {\n\t\t\ttest2['_' + String.fromCharCode(i)] = i;\n\t\t}\n\t\tvar order2 = Object.getOwnPropertyNames(test2).map(function (n) {\n\t\t\treturn test2[n];\n\t\t});\n\t\tif (order2.join('') !== '0123456789') {\n\t\t\treturn false;\n\t\t}\n\n\t\t// https://bugs.chromium.org/p/v8/issues/detail?id=3056\n\t\tvar test3 = {};\n\t\t'abcdefghijklmnopqrst'.split('').forEach(function (letter) {\n\t\t\ttest3[letter] = letter;\n\t\t});\n\t\tif (Object.keys(Object.assign({}, test3)).join('') !==\n\t\t\t\t'abcdefghijklmnopqrst') {\n\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t} catch (err) {\n\t\t// We don't expect any of the above to throw, but better to be safe.\n\t\treturn false;\n\t}\n}\n\nmodule.exports = shouldUseNative() ? Object.assign : function (target, source) {\n\tvar from;\n\tvar to = toObject(target);\n\tvar symbols;\n\n\tfor (var s = 1; s < arguments.length; s++) {\n\t\tfrom = Object(arguments[s]);\n\n\t\tfor (var key in from) {\n\t\t\tif (hasOwnProperty.call(from, key)) {\n\t\t\t\tto[key] = from[key];\n\t\t\t}\n\t\t}\n\n\t\tif (getOwnPropertySymbols) {\n\t\t\tsymbols = getOwnPropertySymbols(from);\n\t\t\tfor (var i = 0; i < symbols.length; i++) {\n\t\t\t\tif (propIsEnumerable.call(from, symbols[i])) {\n\t\t\t\t\tto[symbols[i]] = from[symbols[i]];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\treturn to;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/object-assign/index.js\n// module id = 14\n// module chunks = 0","import './index.css';\nimport { signalToNote } from './utils';\nimport { Tuner } from './Tuner';\n\nconst NUM_SAMPLES = 4096;\nclass MusicalNote {\n  constructor() {\n    this.tuner = new Tuner();\n    this.signal = new Float32Array(NUM_SAMPLES);\n    this.context = new (window.AudioContext || window.webkitAudioContext)();\n    this.analyser = this.context.createAnalyser();\n    this.analyser.fftSize = NUM_SAMPLES;\n\n    this.setupAudio = this.setupAudio.bind(this);\n    this.processAudio = this.processAudio.bind(this);\n    this.setupAudio();\n  }\n\n  setupAudio() {\n    const { context, analyser } = this;\n    let audio = new Audio();\n    audio.src = 'audio/whistling3.ogg';\n    audio.loop = true;\n    audio.addEventListener('canplay', () => {\n      let stream = context.createMediaElementSource(audio);\n      stream.connect(analyser);\n      stream.connect(context.destination);\n      this.processAudio();\n    });\n    audio.play();\n  }\n\n  processAudio () {\n    const { analyser, signal } = this;\n\n    requestAnimationFrame(this.processAudio);\n    analyser.getFloatTimeDomainData(signal);\n    const note = signalToNote(signal);\n\n    if (note) this.tuner.dispatchNote(note);;\n  }\n}\n\nwindow.addEventListener(\"load\", () => {\n  const musicalNote = new MusicalNote();\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","\"use strict\"\n\nvar bits = require('bit-twiddle')\nvar pool = require('typedarray-pool')\nvar ndarray = require('ndarray')\nvar ops = require('ndarray-ops')\nvar fft = require('ndarray-fft')\nvar hann = require('scijs-window-functions/hann')\n\nfunction square(x, y) {\n  var n = x.length\n  for(var i=0; i<n; ++i) {\n    var a = x[i], b = y[i]\n    x[i] = a*a + b*b\n    y[i] = 0.0\n  }\n}\n\nfunction prefilter(x, xf, n) {\n  x[0] = 1\n  var s = 0\n  for(var i=1; i<n; ++i) {\n    var d = Math.max(xf - x[i], 0.0)\n    s += d\n    x[i] = d * i / s\n  }\n}\n\nfunction aperiodic(x, n) {\n  if(n<=3) {\n    return true\n  }\n  var d = ((x + 0.5 * n) % n) - 0.5 * n\n  return Math.abs(d) > 1\n}\n\nfunction findPeriod(x, lo, hi, threshold) {\n  var smallest = 1.0\n  var period = 0\n  for(var i=lo; i+2<hi; ++i) {\n    var y0 = x[i], y1 = x[i+1], y2 = x[i+2]\n    var denom = y2 - 2.0 * y1 + y0\n    if(Math.abs(denom) < 1e-6) {\n      if(y1 < smallest && aperiodic(i+1, period)) {\n        smallest = y1\n        period = i+1\n      }\n    } else {\n      var s = 0.5 * (y0 - y2) / denom\n      if(Math.abs(s) > 1.0) {\n        continue\n      }\n      var ymin = y1 + 0.25 * Math.pow(y0 - y2, 2) / denom\n      if(ymin < smallest) {\n        var f0 = i + s + 1\n        if(aperiodic(f0, period)) {\n          smallest = ymin\n          period = f0\n        }\n      }\n    }\n  }\n  if(smallest < 1.0 - threshold) {\n    return period\n  }\n  return 0.0\n}\n\nfunction detectPitch(signal, threshold) {\n  threshold = threshold || 0.0\n\n  var xs\n  if(signal.shape) {\n    xs = signal.shape[0]\n  } else {\n    xs = signal.length\n  }\n\n  var n = bits.nextPow2(2*xs)\n\n  var i, j, k\n  var re_arr = pool.mallocFloat(n)\n  var im_arr = pool.mallocFloat(n)\n  var X = ndarray(re_arr, [n], [1], 0)\n  var Y = ndarray(im_arr, [n], [1], 0)\n\n  //Initialize array depending on if it is a typed array\n  if(signal.shape) {\n    ops.assign(X.hi(xs), signal)\n  } else {\n    re_arr.set(signal)\n  }\n\n  //Compute magnitude\n  var magnitude = 0.0\n  for(var i=0; i<xs; ++i) {\n    var z = re_arr[i] *= hann(i, xs)\n    magnitude += Math.pow(z, 2)\n  }\n\n  //Zero out arrays\n  for(var i=xs; i<n; ++i) {\n    re_arr[i] = 0.0\n  }\n  for(var i=0; i<n; ++i) {\n    im_arr[i] = 0.0\n  }\n\n  //Autocorrelate\n  fft(1, X, Y)\n  square(re_arr, im_arr)\n  fft(-1, X, Y)\n\n  //Apply prefiltering\n  prefilter(re_arr, magnitude, xs)\n\n  //Detect pitch\n  var period = findPeriod(re_arr, 0, xs>>>1, threshold)\n\n  //Free temporary arrays\n  pool.freeFloat(re_arr)\n  pool.freeFloat(im_arr)\n\n  return period\n}\nmodule.exports = detectPitch\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/detect-pitch/pitch.js\n// module id = 17\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/index.js\n// module id = 18\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/base64-js/index.js\n// module id = 19\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ieee754/index.js\n// module id = 20\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/buffer/node_modules/isarray/index.js\n// module id = 21\n// module chunks = 0","\"use strict\"\n\nfunction dupe_array(count, value, i) {\n  var c = count[i]|0\n  if(c <= 0) {\n    return []\n  }\n  var result = new Array(c), j\n  if(i === count.length-1) {\n    for(j=0; j<c; ++j) {\n      result[j] = value\n    }\n  } else {\n    for(j=0; j<c; ++j) {\n      result[j] = dupe_array(count, value, i+1)\n    }\n  }\n  return result\n}\n\nfunction dupe_number(count, value) {\n  var result, i\n  result = new Array(count)\n  for(i=0; i<count; ++i) {\n    result[i] = value\n  }\n  return result\n}\n\nfunction dupe(count, value) {\n  if(typeof value === \"undefined\") {\n    value = 0\n  }\n  switch(typeof count) {\n    case \"number\":\n      if(count > 0) {\n        return dupe_number(count|0, value)\n      }\n    break\n    case \"object\":\n      if(typeof (count.length) === \"number\") {\n        return dupe_array(count, value, 0)\n      }\n    break\n  }\n  return []\n}\n\nmodule.exports = dupe\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/dup/dup.js\n// module id = 22\n// module chunks = 0","\"use strict\"\n\nfunction iota(n) {\n  var result = new Array(n)\n  for(var i=0; i<n; ++i) {\n    result[i] = i\n  }\n  return result\n}\n\nmodule.exports = iota\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/iota-array/iota.js\n// module id = 23\n// module chunks = 0","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\n// The _isBuffer check is for Safari 5-7 support, because it's missing\n// Object.prototype.constructor. Remove this eventually\nmodule.exports = function (obj) {\n  return obj != null && (isBuffer(obj) || isSlowBuffer(obj) || !!obj._isBuffer)\n}\n\nfunction isBuffer (obj) {\n  return !!obj.constructor && typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n\n// For Node v0.10 support. Remove this eventually.\nfunction isSlowBuffer (obj) {\n  return typeof obj.readFloatLE === 'function' && typeof obj.slice === 'function' && isBuffer(obj.slice(0, 0))\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-buffer/index.js\n// module id = 24\n// module chunks = 0","\"use strict\"\n\nvar createThunk = require(\"./lib/thunk.js\")\n\nfunction Procedure() {\n  this.argTypes = []\n  this.shimArgs = []\n  this.arrayArgs = []\n  this.arrayBlockIndices = []\n  this.scalarArgs = []\n  this.offsetArgs = []\n  this.offsetArgIndex = []\n  this.indexArgs = []\n  this.shapeArgs = []\n  this.funcName = \"\"\n  this.pre = null\n  this.body = null\n  this.post = null\n  this.debug = false\n}\n\nfunction compileCwise(user_args) {\n  //Create procedure\n  var proc = new Procedure()\n  \n  //Parse blocks\n  proc.pre    = user_args.pre\n  proc.body   = user_args.body\n  proc.post   = user_args.post\n\n  //Parse arguments\n  var proc_args = user_args.args.slice(0)\n  proc.argTypes = proc_args\n  for(var i=0; i<proc_args.length; ++i) {\n    var arg_type = proc_args[i]\n    if(arg_type === \"array\" || (typeof arg_type === \"object\" && arg_type.blockIndices)) {\n      proc.argTypes[i] = \"array\"\n      proc.arrayArgs.push(i)\n      proc.arrayBlockIndices.push(arg_type.blockIndices ? arg_type.blockIndices : 0)\n      proc.shimArgs.push(\"array\" + i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count>0) {\n        throw new Error(\"cwise: pre() block may not reference array args\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count>0) {\n        throw new Error(\"cwise: post() block may not reference array args\")\n      }\n    } else if(arg_type === \"scalar\") {\n      proc.scalarArgs.push(i)\n      proc.shimArgs.push(\"scalar\" + i)\n    } else if(arg_type === \"index\") {\n      proc.indexArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].count > 0) {\n        throw new Error(\"cwise: pre() block may not reference array index\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array index\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].count > 0) {\n        throw new Error(\"cwise: post() block may not reference array index\")\n      }\n    } else if(arg_type === \"shape\") {\n      proc.shapeArgs.push(i)\n      if(i < proc.pre.args.length && proc.pre.args[i].lvalue) {\n        throw new Error(\"cwise: pre() block may not write to array shape\")\n      }\n      if(i < proc.body.args.length && proc.body.args[i].lvalue) {\n        throw new Error(\"cwise: body() block may not write to array shape\")\n      }\n      if(i < proc.post.args.length && proc.post.args[i].lvalue) {\n        throw new Error(\"cwise: post() block may not write to array shape\")\n      }\n    } else if(typeof arg_type === \"object\" && arg_type.offset) {\n      proc.argTypes[i] = \"offset\"\n      proc.offsetArgs.push({ array: arg_type.array, offset:arg_type.offset })\n      proc.offsetArgIndex.push(i)\n    } else {\n      throw new Error(\"cwise: Unknown argument type \" + proc_args[i])\n    }\n  }\n  \n  //Make sure at least one array argument was specified\n  if(proc.arrayArgs.length <= 0) {\n    throw new Error(\"cwise: No array arguments specified\")\n  }\n  \n  //Make sure arguments are correct\n  if(proc.pre.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in pre() block\")\n  }\n  if(proc.body.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in body() block\")\n  }\n  if(proc.post.args.length > proc_args.length) {\n    throw new Error(\"cwise: Too many arguments in post() block\")\n  }\n\n  //Check debug flag\n  proc.debug = !!user_args.printCode || !!user_args.debug\n  \n  //Retrieve name\n  proc.funcName = user_args.funcName || \"cwise\"\n  \n  //Read in block size\n  proc.blockSize = user_args.blockSize || 64\n\n  return createThunk(proc)\n}\n\nmodule.exports = compileCwise\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cwise-compiler/compiler.js\n// module id = 25\n// module chunks = 0","\"use strict\"\n\n// The function below is called when constructing a cwise function object, and does the following:\n// A function object is constructed which accepts as argument a compilation function and returns another function.\n// It is this other function that is eventually returned by createThunk, and this function is the one that actually\n// checks whether a certain pattern of arguments has already been used before and compiles new loops as needed.\n// The compilation passed to the first function object is used for compiling new functions.\n// Once this function object is created, it is called with compile as argument, where the first argument of compile\n// is bound to \"proc\" (essentially containing a preprocessed version of the user arguments to cwise).\n// So createThunk roughly works like this:\n// function createThunk(proc) {\n//   var thunk = function(compileBound) {\n//     var CACHED = {}\n//     return function(arrays and scalars) {\n//       if (dtype and order of arrays in CACHED) {\n//         var func = CACHED[dtype and order of arrays]\n//       } else {\n//         var func = CACHED[dtype and order of arrays] = compileBound(dtype and order of arrays)\n//       }\n//       return func(arrays and scalars)\n//     }\n//   }\n//   return thunk(compile.bind1(proc))\n// }\n\nvar compile = require(\"./compile.js\")\n\nfunction createThunk(proc) {\n  var code = [\"'use strict'\", \"var CACHED={}\"]\n  var vars = []\n  var thunkName = proc.funcName + \"_cwise_thunk\"\n  \n  //Build thunk\n  code.push([\"return function \", thunkName, \"(\", proc.shimArgs.join(\",\"), \"){\"].join(\"\"))\n  var typesig = []\n  var string_typesig = []\n  var proc_args = [[\"array\",proc.arrayArgs[0],\".shape.slice(\", // Slice shape so that we only retain the shape over which we iterate (which gets passed to the cwise operator as SS).\n                    Math.max(0,proc.arrayBlockIndices[0]),proc.arrayBlockIndices[0]<0?(\",\"+proc.arrayBlockIndices[0]+\")\"):\")\"].join(\"\")]\n  var shapeLengthConditions = [], shapeConditions = []\n  // Process array arguments\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    var j = proc.arrayArgs[i]\n    vars.push([\"t\", j, \"=array\", j, \".dtype,\",\n               \"r\", j, \"=array\", j, \".order\"].join(\"\"))\n    typesig.push(\"t\" + j)\n    typesig.push(\"r\" + j)\n    string_typesig.push(\"t\"+j)\n    string_typesig.push(\"r\"+j+\".join()\")\n    proc_args.push(\"array\" + j + \".data\")\n    proc_args.push(\"array\" + j + \".stride\")\n    proc_args.push(\"array\" + j + \".offset|0\")\n    if (i>0) { // Gather conditions to check for shape equality (ignoring block indices)\n      shapeLengthConditions.push(\"array\" + proc.arrayArgs[0] + \".shape.length===array\" + j + \".shape.length+\" + (Math.abs(proc.arrayBlockIndices[0])-Math.abs(proc.arrayBlockIndices[i])))\n      shapeConditions.push(\"array\" + proc.arrayArgs[0] + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[0]) + \"]===array\" + j + \".shape[shapeIndex+\" + Math.max(0,proc.arrayBlockIndices[i]) + \"]\")\n    }\n  }\n  // Check for shape equality\n  if (proc.arrayArgs.length > 1) {\n    code.push(\"if (!(\" + shapeLengthConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same dimensionality!')\")\n    code.push(\"for(var shapeIndex=array\" + proc.arrayArgs[0] + \".shape.length-\" + Math.abs(proc.arrayBlockIndices[0]) + \"; shapeIndex-->0;) {\")\n    code.push(\"if (!(\" + shapeConditions.join(\" && \") + \")) throw new Error('cwise: Arrays do not all have the same shape!')\")\n    code.push(\"}\")\n  }\n  // Process scalar arguments\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    proc_args.push(\"scalar\" + proc.scalarArgs[i])\n  }\n  // Check for cached function (and if not present, generate it)\n  vars.push([\"type=[\", string_typesig.join(\",\"), \"].join()\"].join(\"\"))\n  vars.push(\"proc=CACHED[type]\")\n  code.push(\"var \" + vars.join(\",\"))\n  \n  code.push([\"if(!proc){\",\n             \"CACHED[type]=proc=compile([\", typesig.join(\",\"), \"])}\",\n             \"return proc(\", proc_args.join(\",\"), \")}\"].join(\"\"))\n\n  if(proc.debug) {\n    console.log(\"-----Generated thunk:\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  //Compile thunk\n  var thunk = new Function(\"compile\", code.join(\"\\n\"))\n  return thunk(compile.bind(undefined, proc))\n}\n\nmodule.exports = createThunk\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cwise-compiler/lib/thunk.js\n// module id = 26\n// module chunks = 0","\"use strict\"\n\nvar uniq = require(\"uniq\")\n\n// This function generates very simple loops analogous to how you typically traverse arrays (the outermost loop corresponds to the slowest changing index, the innermost loop to the fastest changing index)\n// TODO: If two arrays have the same strides (and offsets) there is potential for decreasing the number of \"pointers\" and related variables. The drawback is that the type signature would become more specific and that there would thus be less potential for caching, but it might still be worth it, especially when dealing with large numbers of arguments.\nfunction innerFill(order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , has_index = proc.indexArgs.length>0\n    , code = []\n    , vars = []\n    , idx=0, pidx=0, i, j\n  for(i=0; i<dimension; ++i) { // Iteration variables\n    vars.push([\"i\",i,\"=0\"].join(\"\"))\n  }\n  //Compute scan deltas\n  for(j=0; j<nargs; ++j) {\n    for(i=0; i<dimension; ++i) {\n      pidx = idx\n      idx = order[i]\n      if(i === 0) { // The innermost/fastest dimension's delta is simply its stride\n        vars.push([\"d\",j,\"s\",i,\"=t\",j,\"p\",idx].join(\"\"))\n      } else { // For other dimensions the delta is basically the stride minus something which essentially \"rewinds\" the previous (more inner) dimension\n        vars.push([\"d\",j,\"s\",i,\"=(t\",j,\"p\",idx,\"-s\",pidx,\"*t\",j,\"p\",pidx,\")\"].join(\"\"))\n      }\n    }\n  }\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }  \n  //Scan loop\n  for(i=dimension-1; i>=0; --i) { // Start at largest stride and work your way inwards\n    idx = order[i]\n    code.push([\"for(i\",i,\"=0;i\",i,\"<s\",idx,\";++i\",i,\"){\"].join(\"\"))\n  }\n  //Push body of inner loop\n  code.push(body)\n  //Advance scan pointers\n  for(i=0; i<dimension; ++i) {\n    pidx = idx\n    idx = order[i]\n    for(j=0; j<nargs; ++j) {\n      code.push([\"p\",j,\"+=d\",j,\"s\",i].join(\"\"))\n    }\n    if(has_index) {\n      if(i > 0) {\n        code.push([\"index[\",pidx,\"]-=s\",pidx].join(\"\"))\n      }\n      code.push([\"++index[\",idx,\"]\"].join(\"\"))\n    }\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n// Generate \"outer\" loops that loop over blocks of data, applying \"inner\" loops to the blocks by manipulating the local variables in such a way that the inner loop only \"sees\" the current block.\n// TODO: If this is used, then the previous declaration (done by generateCwiseOp) of s* is essentially unnecessary.\n//       I believe the s* are not used elsewhere (in particular, I don't think they're used in the pre/post parts and \"shape\" is defined independently), so it would be possible to make defining the s* dependent on what loop method is being used.\nfunction outerFill(matched, order, proc, body) {\n  var dimension = order.length\n    , nargs = proc.arrayArgs.length\n    , blockSize = proc.blockSize\n    , has_index = proc.indexArgs.length > 0\n    , code = []\n  for(var i=0; i<nargs; ++i) {\n    code.push([\"var offset\",i,\"=p\",i].join(\"\"))\n  }\n  //Generate loops for unmatched dimensions\n  // The order in which these dimensions are traversed is fairly arbitrary (from small stride to large stride, for the first argument)\n  // TODO: It would be nice if the order in which these loops are placed would also be somehow \"optimal\" (at the very least we should check that it really doesn't hurt us if they're not).\n  for(var i=matched; i<dimension; ++i) {\n    code.push([\"for(var j\"+i+\"=SS[\", order[i], \"]|0;j\", i, \">0;){\"].join(\"\")) // Iterate back to front\n    code.push([\"if(j\",i,\"<\",blockSize,\"){\"].join(\"\")) // Either decrease j by blockSize (s = blockSize), or set it to zero (after setting s = j).\n    code.push([\"s\",order[i],\"=j\",i].join(\"\"))\n    code.push([\"j\",i,\"=0\"].join(\"\"))\n    code.push([\"}else{s\",order[i],\"=\",blockSize].join(\"\"))\n    code.push([\"j\",i,\"-=\",blockSize,\"}\"].join(\"\"))\n    if(has_index) {\n      code.push([\"index[\",order[i],\"]=j\",i].join(\"\"))\n    }\n  }\n  for(var i=0; i<nargs; ++i) {\n    var indexStr = [\"offset\"+i]\n    for(var j=matched; j<dimension; ++j) {\n      indexStr.push([\"j\",j,\"*t\",i,\"p\",order[j]].join(\"\"))\n    }\n    code.push([\"p\",i,\"=(\",indexStr.join(\"+\"),\")\"].join(\"\"))\n  }\n  code.push(innerFill(order, proc, body))\n  for(var i=matched; i<dimension; ++i) {\n    code.push(\"}\")\n  }\n  return code.join(\"\\n\")\n}\n\n//Count the number of compatible inner orders\n// This is the length of the longest common prefix of the arrays in orders.\n// Each array in orders lists the dimensions of the correspond ndarray in order of increasing stride.\n// This is thus the maximum number of dimensions that can be efficiently traversed by simple nested loops for all arrays.\nfunction countMatches(orders) {\n  var matched = 0, dimension = orders[0].length\n  while(matched < dimension) {\n    for(var j=1; j<orders.length; ++j) {\n      if(orders[j][matched] !== orders[0][matched]) {\n        return matched\n      }\n    }\n    ++matched\n  }\n  return matched\n}\n\n//Processes a block according to the given data types\n// Replaces variable names by different ones, either \"local\" ones (that are then ferried in and out of the given array) or ones matching the arguments that the function performing the ultimate loop will accept.\nfunction processBlock(block, proc, dtypes) {\n  var code = block.body\n  var pre = []\n  var post = []\n  for(var i=0; i<block.args.length; ++i) {\n    var carg = block.args[i]\n    if(carg.count <= 0) {\n      continue\n    }\n    var re = new RegExp(carg.name, \"g\")\n    var ptrStr = \"\"\n    var arrNum = proc.arrayArgs.indexOf(i)\n    switch(proc.argTypes[i]) {\n      case \"offset\":\n        var offArgIndex = proc.offsetArgIndex.indexOf(i)\n        var offArg = proc.offsetArgs[offArgIndex]\n        arrNum = offArg.array\n        ptrStr = \"+q\" + offArgIndex // Adds offset to the \"pointer\" in the array\n      case \"array\":\n        ptrStr = \"p\" + arrNum + ptrStr\n        var localStr = \"l\" + i\n        var arrStr = \"a\" + arrNum\n        if (proc.arrayBlockIndices[arrNum] === 0) { // Argument to body is just a single value from this array\n          if(carg.count === 1) { // Argument/array used only once(?)\n            if(dtypes[arrNum] === \"generic\") {\n              if(carg.lvalue) {\n                pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n                code = code.replace(re, localStr)\n                post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n              } else {\n                code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n              }\n            } else {\n              code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n            }\n          } else if(dtypes[arrNum] === \"generic\") {\n            pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            }\n          } else {\n            pre.push([\"var \", localStr, \"=\", arrStr, \"[\", ptrStr, \"]\"].join(\"\")) // TODO: Could we optimize by checking for carg.rvalue?\n            code = code.replace(re, localStr)\n            if(carg.lvalue) {\n              post.push([arrStr, \"[\", ptrStr, \"]=\", localStr].join(\"\"))\n            }\n          }\n        } else { // Argument to body is a \"block\"\n          var reStrArr = [carg.name], ptrStrArr = [ptrStr]\n          for(var j=0; j<Math.abs(proc.arrayBlockIndices[arrNum]); j++) {\n            reStrArr.push(\"\\\\s*\\\\[([^\\\\]]+)\\\\]\")\n            ptrStrArr.push(\"$\" + (j+1) + \"*t\" + arrNum + \"b\" + j) // Matched index times stride\n          }\n          re = new RegExp(reStrArr.join(\"\"), \"g\")\n          ptrStr = ptrStrArr.join(\"+\")\n          if(dtypes[arrNum] === \"generic\") {\n            /*if(carg.lvalue) {\n              pre.push([\"var \", localStr, \"=\", arrStr, \".get(\", ptrStr, \")\"].join(\"\")) // Is this necessary if the argument is ONLY used as an lvalue? (keep in mind that we can have a += something, so we would actually need to check carg.rvalue)\n              code = code.replace(re, localStr)\n              post.push([arrStr, \".set(\", ptrStr, \",\", localStr,\")\"].join(\"\"))\n            } else {\n              code = code.replace(re, [arrStr, \".get(\", ptrStr, \")\"].join(\"\"))\n            }*/\n            throw new Error(\"cwise: Generic arrays not supported in combination with blocks!\")\n          } else {\n            // This does not produce any local variables, even if variables are used multiple times. It would be possible to do so, but it would complicate things quite a bit.\n            code = code.replace(re, [arrStr, \"[\", ptrStr, \"]\"].join(\"\"))\n          }\n        }\n      break\n      case \"scalar\":\n        code = code.replace(re, \"Y\" + proc.scalarArgs.indexOf(i))\n      break\n      case \"index\":\n        code = code.replace(re, \"index\")\n      break\n      case \"shape\":\n        code = code.replace(re, \"shape\")\n      break\n    }\n  }\n  return [pre.join(\"\\n\"), code, post.join(\"\\n\")].join(\"\\n\").trim()\n}\n\nfunction typeSummary(dtypes) {\n  var summary = new Array(dtypes.length)\n  var allEqual = true\n  for(var i=0; i<dtypes.length; ++i) {\n    var t = dtypes[i]\n    var digits = t.match(/\\d+/)\n    if(!digits) {\n      digits = \"\"\n    } else {\n      digits = digits[0]\n    }\n    if(t.charAt(0) === 0) {\n      summary[i] = \"u\" + t.charAt(1) + digits\n    } else {\n      summary[i] = t.charAt(0) + digits\n    }\n    if(i > 0) {\n      allEqual = allEqual && summary[i] === summary[i-1]\n    }\n  }\n  if(allEqual) {\n    return summary[0]\n  }\n  return summary.join(\"\")\n}\n\n//Generates a cwise operator\nfunction generateCWiseOp(proc, typesig) {\n\n  //Compute dimension\n  // Arrays get put first in typesig, and there are two entries per array (dtype and order), so this gets the number of dimensions in the first array arg.\n  var dimension = (typesig[1].length - Math.abs(proc.arrayBlockIndices[0]))|0\n  var orders = new Array(proc.arrayArgs.length)\n  var dtypes = new Array(proc.arrayArgs.length)\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    dtypes[i] = typesig[2*i]\n    orders[i] = typesig[2*i+1]\n  }\n  \n  //Determine where block and loop indices start and end\n  var blockBegin = [], blockEnd = [] // These indices are exposed as blocks\n  var loopBegin = [], loopEnd = [] // These indices are iterated over\n  var loopOrders = [] // orders restricted to the loop indices\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    if (proc.arrayBlockIndices[i]<0) {\n      loopBegin.push(0)\n      loopEnd.push(dimension)\n      blockBegin.push(dimension)\n      blockEnd.push(dimension+proc.arrayBlockIndices[i])\n    } else {\n      loopBegin.push(proc.arrayBlockIndices[i]) // Non-negative\n      loopEnd.push(proc.arrayBlockIndices[i]+dimension)\n      blockBegin.push(0)\n      blockEnd.push(proc.arrayBlockIndices[i])\n    }\n    var newOrder = []\n    for(var j=0; j<orders[i].length; j++) {\n      if (loopBegin[i]<=orders[i][j] && orders[i][j]<loopEnd[i]) {\n        newOrder.push(orders[i][j]-loopBegin[i]) // If this is a loop index, put it in newOrder, subtracting loopBegin, to make sure that all loopOrders are using a common set of indices.\n      }\n    }\n    loopOrders.push(newOrder)\n  }\n\n  //First create arguments for procedure\n  var arglist = [\"SS\"] // SS is the overall shape over which we iterate\n  var code = [\"'use strict'\"]\n  var vars = []\n  \n  for(var j=0; j<dimension; ++j) {\n    vars.push([\"s\", j, \"=SS[\", j, \"]\"].join(\"\")) // The limits for each dimension.\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    arglist.push(\"a\"+i) // Actual data array\n    arglist.push(\"t\"+i) // Strides\n    arglist.push(\"p\"+i) // Offset in the array at which the data starts (also used for iterating over the data)\n    \n    for(var j=0; j<dimension; ++j) { // Unpack the strides into vars for looping\n      vars.push([\"t\",i,\"p\",j,\"=t\",i,\"[\",loopBegin[i]+j,\"]\"].join(\"\"))\n    }\n    \n    for(var j=0; j<Math.abs(proc.arrayBlockIndices[i]); ++j) { // Unpack the strides into vars for block iteration\n      vars.push([\"t\",i,\"b\",j,\"=t\",i,\"[\",blockBegin[i]+j,\"]\"].join(\"\"))\n    }\n  }\n  for(var i=0; i<proc.scalarArgs.length; ++i) {\n    arglist.push(\"Y\" + i)\n  }\n  if(proc.shapeArgs.length > 0) {\n    vars.push(\"shape=SS.slice(0)\") // Makes the shape over which we iterate available to the user defined functions (so you can use width/height for example)\n  }\n  if(proc.indexArgs.length > 0) {\n    // Prepare an array to keep track of the (logical) indices, initialized to dimension zeroes.\n    var zeros = new Array(dimension)\n    for(var i=0; i<dimension; ++i) {\n      zeros[i] = \"0\"\n    }\n    vars.push([\"index=[\", zeros.join(\",\"), \"]\"].join(\"\"))\n  }\n  for(var i=0; i<proc.offsetArgs.length; ++i) { // Offset arguments used for stencil operations\n    var off_arg = proc.offsetArgs[i]\n    var init_string = []\n    for(var j=0; j<off_arg.offset.length; ++j) {\n      if(off_arg.offset[j] === 0) {\n        continue\n      } else if(off_arg.offset[j] === 1) {\n        init_string.push([\"t\", off_arg.array, \"p\", j].join(\"\"))      \n      } else {\n        init_string.push([off_arg.offset[j], \"*t\", off_arg.array, \"p\", j].join(\"\"))\n      }\n    }\n    if(init_string.length === 0) {\n      vars.push(\"q\" + i + \"=0\")\n    } else {\n      vars.push([\"q\", i, \"=\", init_string.join(\"+\")].join(\"\"))\n    }\n  }\n\n  //Prepare this variables\n  var thisVars = uniq([].concat(proc.pre.thisVars)\n                      .concat(proc.body.thisVars)\n                      .concat(proc.post.thisVars))\n  vars = vars.concat(thisVars)\n  if (vars.length > 0) {\n    code.push(\"var \" + vars.join(\",\"))\n  }\n  for(var i=0; i<proc.arrayArgs.length; ++i) {\n    code.push(\"p\"+i+\"|=0\")\n  }\n  \n  //Inline prelude\n  if(proc.pre.body.length > 3) {\n    code.push(processBlock(proc.pre, proc, dtypes))\n  }\n\n  //Process body\n  var body = processBlock(proc.body, proc, dtypes)\n  var matched = countMatches(loopOrders)\n  if(matched < dimension) {\n    code.push(outerFill(matched, loopOrders[0], proc, body)) // TODO: Rather than passing loopOrders[0], it might be interesting to look at passing an order that represents the majority of the arguments for example.\n  } else {\n    code.push(innerFill(loopOrders[0], proc, body))\n  }\n\n  //Inline epilog\n  if(proc.post.body.length > 3) {\n    code.push(processBlock(proc.post, proc, dtypes))\n  }\n  \n  if(proc.debug) {\n    console.log(\"-----Generated cwise routine for \", typesig, \":\\n\" + code.join(\"\\n\") + \"\\n----------\")\n  }\n  \n  var loopName = [(proc.funcName||\"unnamed\"), \"_cwise_loop_\", orders[0].join(\"s\"),\"m\",matched,typeSummary(dtypes)].join(\"\")\n  var f = new Function([\"function \",loopName,\"(\", arglist.join(\",\"),\"){\", code.join(\"\\n\"),\"} return \", loopName].join(\"\"))\n  return f()\n}\nmodule.exports = generateCWiseOp\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cwise-compiler/lib/compile.js\n// module id = 27\n// module chunks = 0","\"use strict\"\n\nfunction unique_pred(list, compare) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b=list[0]\n  for(var i=1; i<len; ++i) {\n    b = a\n    a = list[i]\n    if(compare(a, b)) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique_eq(list) {\n  var ptr = 1\n    , len = list.length\n    , a=list[0], b = list[0]\n  for(var i=1; i<len; ++i, b=a) {\n    b = a\n    a = list[i]\n    if(a !== b) {\n      if(i === ptr) {\n        ptr++\n        continue\n      }\n      list[ptr++] = a\n    }\n  }\n  list.length = ptr\n  return list\n}\n\nfunction unique(list, compare, sorted) {\n  if(list.length === 0) {\n    return list\n  }\n  if(compare) {\n    if(!sorted) {\n      list.sort(compare)\n    }\n    return unique_pred(list, compare)\n  }\n  if(!sorted) {\n    list.sort()\n  }\n  return unique_eq(list)\n}\n\nmodule.exports = unique\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/uniq/uniq.js\n// module id = 28\n// module chunks = 0","'use strict'\r\n\r\nvar ops = require('ndarray-ops')\r\nvar ndarray = require('ndarray')\r\nvar pool = require('typedarray-pool')\r\nvar fftm = require('./lib/fft-matrix.js')\r\n\r\nfunction ndfft(dir, x, y) {\r\n  var shape = x.shape\r\n    , d = shape.length\r\n    , size = 1\r\n    , stride = new Array(d)\r\n    , pad = 0\r\n    , i, j\r\n  for(i=d-1; i>=0; --i) {\r\n    stride[i] = size\r\n    size *= shape[i]\r\n    pad = Math.max(pad, fftm.scratchMemory(shape[i]))\r\n    if(x.shape[i] !== y.shape[i]) {\r\n      throw new Error('Shape mismatch, real and imaginary arrays must have same size')\r\n    }\r\n  }\r\n  var buf_size = 4 * size + pad\r\n  var buffer\r\n  if( x.dtype === 'array' ||\r\n      x.dtype === 'float64' ||\r\n      x.dtype === 'custom' ) {\r\n    buffer = pool.mallocDouble(buf_size)\r\n  } else {\r\n    buffer = pool.mallocFloat(buf_size)\r\n  }\r\n  var x1 = ndarray(buffer, shape.slice(0), stride, 0)\r\n    , y1 = ndarray(buffer, shape.slice(0), stride.slice(0), size)\r\n    , x2 = ndarray(buffer, shape.slice(0), stride.slice(0), 2*size)\r\n    , y2 = ndarray(buffer, shape.slice(0), stride.slice(0), 3*size)\r\n    , tmp, n, s1, s2\r\n    , scratch_ptr = 4 * size\r\n  \r\n  //Copy into x1/y1\r\n  ops.assign(x1, x)\r\n  ops.assign(y1, y)\r\n  \r\n  for(i=d-1; i>=0; --i) {\r\n    fftm(dir, size/shape[i], shape[i], buffer, x1.offset, y1.offset, scratch_ptr)\r\n    if(i === 0) {\r\n      break\r\n    }\r\n    \r\n    //Compute new stride for x2/y2\r\n    n = 1\r\n    s1 = x2.stride\r\n    s2 = y2.stride\r\n    for(j=i-1; j<d; ++j) {\r\n      s2[j] = s1[j] = n\r\n      n *= shape[j]\r\n    }\r\n    for(j=i-2; j>=0; --j) {\r\n      s2[j] = s1[j] = n\r\n      n *= shape[j]\r\n    }\r\n    \r\n    //Transpose\r\n    ops.assign(x2, x1)\r\n    ops.assign(y2, y1)\r\n    \r\n    //Swap buffers\r\n    tmp = x1\r\n    x1 = x2\r\n    x2 = tmp\r\n    tmp = y1\r\n    y1 = y2\r\n    y2 = tmp\r\n  }\r\n  \r\n  //Copy result back into x\r\n  ops.assign(x, x1)\r\n  ops.assign(y, y1)\r\n  \r\n  pool.free(buffer)\r\n}\r\n\r\nmodule.exports = ndfft\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ndarray-fft/fft.js\n// module id = 29\n// module chunks = 0","var bits = require('bit-twiddle')\r\n\r\nfunction fft(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  if(bits.isPow2(ncols)) {\r\n    fftRadix2(dir, nrows, ncols, buffer, x_ptr, y_ptr)\r\n  } else {\r\n    fftBluestein(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr)\r\n  }\r\n}\r\nmodule.exports = fft\r\n\r\nfunction scratchMemory(n) {\r\n  if(bits.isPow2(n)) {\r\n    return 0\r\n  }\r\n  return 2 * n + 4 * bits.nextPow2(2*n + 1)\r\n}\r\nmodule.exports.scratchMemory = scratchMemory\r\n\r\n\r\n//Radix 2 FFT Adapted from Paul Bourke's C Implementation\r\nfunction fftRadix2(dir, nrows, ncols, buffer, x_ptr, y_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  var nn,m,i,i1,j,k,i2,l,l1,l2\r\n  var c1,c2,t,t1,t2,u1,u2,z,row,a,b,c,d,k1,k2,k3\r\n  \r\n  // Calculate the number of points\r\n  nn = ncols\r\n  m = bits.log2(nn)\r\n  \r\n  for(row=0; row<nrows; ++row) {  \r\n    // Do the bit reversal\r\n    i2 = nn >> 1;\r\n    j = 0;\r\n    for(i=0;i<nn-1;i++) {\r\n      if(i < j) {\r\n        t = buffer[x_ptr+i]\r\n        buffer[x_ptr+i] = buffer[x_ptr+j]\r\n        buffer[x_ptr+j] = t\r\n        t = buffer[y_ptr+i]\r\n        buffer[y_ptr+i] = buffer[y_ptr+j]\r\n        buffer[y_ptr+j] = t\r\n      }\r\n      k = i2\r\n      while(k <= j) {\r\n        j -= k\r\n        k >>= 1\r\n      }\r\n      j += k\r\n    }\r\n    \r\n    // Compute the FFT\r\n    c1 = -1.0\r\n    c2 = 0.0\r\n    l2 = 1\r\n    for(l=0;l<m;l++) {\r\n      l1 = l2\r\n      l2 <<= 1\r\n      u1 = 1.0\r\n      u2 = 0.0\r\n      for(j=0;j<l1;j++) {\r\n        for(i=j;i<nn;i+=l2) {\r\n          i1 = i + l1\r\n          a = buffer[x_ptr+i1]\r\n          b = buffer[y_ptr+i1]\r\n          c = buffer[x_ptr+i]\r\n          d = buffer[y_ptr+i]\r\n          k1 = u1 * (a + b)\r\n          k2 = a * (u2 - u1)\r\n          k3 = b * (u1 + u2)\r\n          t1 = k1 - k3\r\n          t2 = k1 + k2\r\n          buffer[x_ptr+i1] = c - t1\r\n          buffer[y_ptr+i1] = d - t2\r\n          buffer[x_ptr+i] += t1\r\n          buffer[y_ptr+i] += t2\r\n        }\r\n        k1 = c1 * (u1 + u2)\r\n        k2 = u1 * (c2 - c1)\r\n        k3 = u2 * (c1 + c2)\r\n        u1 = k1 - k3\r\n        u2 = k1 + k2\r\n      }\r\n      c2 = Math.sqrt((1.0 - c1) / 2.0)\r\n      if(dir < 0) {\r\n        c2 = -c2\r\n      }\r\n      c1 = Math.sqrt((1.0 + c1) / 2.0)\r\n    }\r\n    \r\n    // Scaling for inverse transform\r\n    if(dir < 0) {\r\n      var scale_f = 1.0 / nn\r\n      for(i=0;i<nn;i++) {\r\n        buffer[x_ptr+i] *= scale_f\r\n        buffer[y_ptr+i] *= scale_f\r\n      }\r\n    }\r\n    \r\n    // Advance pointers\r\n    x_ptr += ncols\r\n    y_ptr += ncols\r\n  }\r\n}\r\n\r\n// Use Bluestein algorithm for npot FFTs\r\n// Scratch memory required:  2 * ncols + 4 * bits.nextPow2(2*ncols + 1)\r\nfunction fftBluestein(dir, nrows, ncols, buffer, x_ptr, y_ptr, scratch_ptr) {\r\n  dir |= 0\r\n  nrows |= 0\r\n  ncols |= 0\r\n  x_ptr |= 0\r\n  y_ptr |= 0\r\n  scratch_ptr |= 0\r\n\r\n  // Initialize tables\r\n  var m = bits.nextPow2(2 * ncols + 1)\r\n    , cos_ptr = scratch_ptr\r\n    , sin_ptr = cos_ptr + ncols\r\n    , xs_ptr  = sin_ptr + ncols\r\n    , ys_ptr  = xs_ptr  + m\r\n    , cft_ptr = ys_ptr  + m\r\n    , sft_ptr = cft_ptr + m\r\n    , w = -dir * Math.PI / ncols\r\n    , row, a, b, c, d, k1, k2, k3\r\n    , i\r\n  for(i=0; i<ncols; ++i) {\r\n    a = w * ((i * i) % (ncols * 2))\r\n    c = Math.cos(a)\r\n    d = Math.sin(a)\r\n    buffer[cft_ptr+(m-i)] = buffer[cft_ptr+i] = buffer[cos_ptr+i] = c\r\n    buffer[sft_ptr+(m-i)] = buffer[sft_ptr+i] = buffer[sin_ptr+i] = d\r\n  }\r\n  for(i=ncols; i<=m-ncols; ++i) {\r\n    buffer[cft_ptr+i] = 0.0\r\n  }\r\n  for(i=ncols; i<=m-ncols; ++i) {\r\n    buffer[sft_ptr+i] = 0.0\r\n  }\r\n\r\n  fftRadix2(1, 1, m, buffer, cft_ptr, sft_ptr)\r\n  \r\n  //Compute scale factor\r\n  if(dir < 0) {\r\n    w = 1.0 / ncols\r\n  } else {\r\n    w = 1.0\r\n  }\r\n  \r\n  //Handle direction\r\n  for(row=0; row<nrows; ++row) {\r\n  \r\n    // Copy row into scratch memory, multiply weights\r\n    for(i=0; i<ncols; ++i) {\r\n      a = buffer[x_ptr+i]\r\n      b = buffer[y_ptr+i]\r\n      c = buffer[cos_ptr+i]\r\n      d = -buffer[sin_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[xs_ptr+i] = k1 - k3\r\n      buffer[ys_ptr+i] = k1 + k2\r\n    }\r\n    //Zero out the rest\r\n    for(i=ncols; i<m; ++i) {\r\n      buffer[xs_ptr+i] = 0.0\r\n    }\r\n    for(i=ncols; i<m; ++i) {\r\n      buffer[ys_ptr+i] = 0.0\r\n    }\r\n    \r\n    // FFT buffer\r\n    fftRadix2(1, 1, m, buffer, xs_ptr, ys_ptr)\r\n    \r\n    // Apply multiplier\r\n    for(i=0; i<m; ++i) {\r\n      a = buffer[xs_ptr+i]\r\n      b = buffer[ys_ptr+i]\r\n      c = buffer[cft_ptr+i]\r\n      d = buffer[sft_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[xs_ptr+i] = k1 - k3\r\n      buffer[ys_ptr+i] = k1 + k2\r\n    }\r\n    \r\n    // Inverse FFT buffer\r\n    fftRadix2(-1, 1, m, buffer, xs_ptr, ys_ptr)\r\n    \r\n    // Copy result back into x/y\r\n    for(i=0; i<ncols; ++i) {\r\n      a = buffer[xs_ptr+i]\r\n      b = buffer[ys_ptr+i]\r\n      c = buffer[cos_ptr+i]\r\n      d = -buffer[sin_ptr+i]\r\n      k1 = c * (a + b)\r\n      k2 = a * (d - c)\r\n      k3 = b * (c + d)\r\n      buffer[x_ptr+i] = w * (k1 - k3)\r\n      buffer[y_ptr+i] = w * (k1 + k2)\r\n    }\r\n    \r\n    x_ptr += ncols\r\n    y_ptr += ncols\r\n  }\r\n}\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ndarray-fft/lib/fft-matrix.js\n// module id = 30\n// module chunks = 0","'use strict'\n\nfunction hann (i,N) {\n  return 0.5*(1 - Math.cos(6.283185307179586*i/(N-1)))\n}\n\nmodule.exports = hann\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/scijs-window-functions/hann.js\n// module id = 31\n// module chunks = 0","import { degreesToRadians, isEven } from './utils';\nimport { Tuner } from './Tuner';\n\nclass Meter {\n  constructor(canvas) {\n    this.canvas = canvas;\n    this.ctx = this.canvas.getContext('2d');\n    this.dimensions = {\n      height: this.canvas.height,\n      width: this.canvas.width,\n    };\n\n    this.reDraw(0);\n  }\n\n  setupCanvas() {\n    const { ctx, dimensions } = this;\n    const { height, width } = dimensions;\n\n    ctx.restore();\n    ctx.clearRect (0, 0, width, height);\n    ctx.save();\n\n    // x = 200, y = 150\n    // Move towards the centre\n    ctx.translate(width / 2, height / 2);\n    ctx.beginPath();\n\n    // Centre dot\n    ctx.arc(0, 0, 4, 0, 2 * Math.PI, false);\n    ctx.lineWidth = 1.5;\n    ctx.fill();\n\n\n    // // Draw the meter\n    ctx.save();\n    ctx.rotate(degreesToRadians(90));\n    Array.from({ length: 19 }, (x,j) => j*10).forEach(i => {\n      const yCord = - (isEven(i/10) ? (height/2 - 10) : (height/2 - 5));\n      ctx.moveTo(0, yCord);\n      ctx.lineTo(0, - height/2);\n      ctx.rotate(degreesToRadians(-10));\n    });\n\n    ctx.stroke();\n    ctx.restore(); // Reset the roration\n  }\n\n  // An equally tempered semitone (the interval between two adjacent piano keys) spans 100 cents by definition\n  drawNeedle(cents) {\n    const { ctx, dimensions } = this;\n    const { height, width } = dimensions;\n    // Draw the needle\n    ctx.rotate(degreesToRadians(90 * 2 * cents/100 ));\n    ctx.moveTo(0,0);\n    ctx.lineTo(0, - (height/2 - 20) );\n    ctx.stroke();\n  }\n\n  reDraw(cents) {\n    this.setupCanvas();\n    this.drawNeedle(cents);\n  }\n}\n\nexport { Meter };\n\n\n\n// WEBPACK FOOTER //\n// ./src/Meter.js"],"sourceRoot":""}